{"ast":null,"code":"import Big from \"big.js\";\nimport { NFTStorage } from 'nft.storage';\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 13).toFixed();\nexport default {\n  name: \"CreateCarComponent\",\n\n  data() {\n    return {\n      title: \"\",\n      description: \"\",\n      image: \"\",\n      price_per_hour: \"\"\n    };\n  },\n\n  methods: {\n    async createCar() {},\n\n    async fileOnChange(e) {\n      let loader = this.$loading.show();\n      /* upload image to IPFS */\n\n      const file = e.target.files[0];\n      const client = new NFTStorage({\n        token: process.env.VUE_APP_NFT_STORAGE_TOKEN\n      });\n      const metadataCid = await client.storeBlob(file);\n      const metadataUrl = \"https://ipfs.io/ipfs/\" + metadataCid;\n      this.image = metadataUrl;\n      loader.hide();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAyBA,OAAOA,GAAP,MAAgB,QAAhB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,MAAMC,eAAc,GAAIF,GAAG,CAAC,CAAD,CAAH,CAAOG,KAAP,CAAa,MAAM,EAAnB,EAAuBC,OAAvB,EAAxB;AAEA,eAAe;EACbC,IAAI,EAAE,oBADO;;EAEbC,IAAI,GAAE;IACJ,OAAO;MACLC,KAAK,EAAC,EADD;MAELC,WAAW,EAAC,EAFP;MAGLC,KAAK,EAAC,EAHD;MAILC,cAAc,EAAC;IAJV,CAAP;EAMD,CATY;;EAUbC,OAAO,EAAC;IACN,MAAMC,SAAN,GAAiB,CAEhB,CAHK;;IAIN,MAAMC,YAAN,CAAmBC,CAAnB,EAAqB;MACnB,IAAIC,MAAK,GAAI,KAAKC,QAAL,CAAcC,IAAd,EAAb;MACA;;MACA,MAAMC,IAAG,GAAIJ,CAAC,CAACK,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;MACA,MAAMC,MAAK,GAAI,IAAIpB,UAAJ,CAAe;QAAEqB,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC;MAArB,CAAf,CAAf;MACA,MAAMC,WAAU,GAAI,MAAML,MAAM,CAACM,SAAP,CAAiBT,IAAjB,CAA1B;MACA,MAAMU,WAAU,GAAI,0BAA0BF,WAA9C;MACA,KAAKjB,KAAL,GAAamB,WAAb;MACAb,MAAM,CAACc,IAAP;IACD;;EAbK;AAVK,CAAf","names":["Big","NFTStorage","BOATLOAD_OF_GAS","times","toFixed","name","data","title","description","image","price_per_hour","methods","createCar","fileOnChange","e","loader","$loading","show","file","target","files","client","token","process","env","VUE_APP_NFT_STORAGE_TOKEN","metadataCid","storeBlob","metadataUrl","hide"],"sourceRoot":"","sources":["/var/www/ch-8-car-renting/frontend/src/components/Pages/CreateCarComponent.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"createCar\">\n    <div class=\"mb-3\">\n      <label for=\"title\" class=\"form-label\">Title</label>\n      <input type=\"text\" class=\"form-control\" id=\"title\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"title\" class=\"form-label\">Description</label>\n      <input type=\"text\" class=\"form-control\" id=\"title\">\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"nft_media\" class=\"form-label\">NFT Media</label>\n      <input type=\"file\" class=\"form-control\" id=\"nft_media\" @change=\"fileOnChange\" required>\n      <img class=\"my-4\" width=\"350\" :src=\"form.nft_media\"/>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"title\" class=\"form-label\">Title</label>\n      <input type=\"text\" class=\"form-control\" id=\"title\">\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n  </form>\n</template>\n\n<script>\nimport Big from \"big.js\";\nimport { NFTStorage } from 'nft.storage'\n\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 13).toFixed();\n\nexport default {\n  name: \"CreateCarComponent\",\n  data(){\n    return {\n      title:\"\",\n      description:\"\",\n      image:\"\",\n      price_per_hour:\"\",\n    }\n  },\n  methods:{\n    async createCar(){\n\n    },\n    async fileOnChange(e){\n      let loader = this.$loading.show();\n      /* upload image to IPFS */\n      const file = e.target.files[0];\n      const client = new NFTStorage({ token: process.env.VUE_APP_NFT_STORAGE_TOKEN });\n      const metadataCid = await client.storeBlob(file)\n      const metadataUrl = \"https://ipfs.io/ipfs/\" + metadataCid;\n      this.image = metadataUrl;\n      loader.hide();\n    },\n\n  }\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}