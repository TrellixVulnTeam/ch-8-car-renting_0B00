{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Near = void 0;\n/**\n * This module contains the main class developers will use to interact with NEAR.\n * The {@link Near} class is used to interact with {@link Account | Accounts} through the {@link JsonRpcProvider.JsonRpcProvider | JsonRpcProvider}.\n * It is configured via the {@link NearConfig}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n *\n * @module near\n */\n\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\n\nconst account_1 = require(\"./account\");\n\nconst connection_1 = require(\"./connection\");\n\nconst contract_1 = require(\"./contract\");\n\nconst account_creator_1 = require(\"./account_creator\");\n/**\n * This is the main class developers should use to interact with NEAR.\n * @example\n * ```js\n * const near = new Near(config);\n * ```\n */\n\n\nclass Near {\n  constructor(config) {\n    this.config = config;\n    this.connection = connection_1.Connection.fromConfig({\n      networkId: config.networkId,\n      provider: {\n        type: 'JsonRpcProvider',\n        args: {\n          url: config.nodeUrl,\n          headers: config.headers\n        }\n      },\n      signer: config.signer || {\n        type: 'InMemorySigner',\n        keyStore: config.keyStore || config.deps.keyStore\n      }\n    });\n\n    if (config.masterAccount) {\n      // TODO: figure out better way of specifiying initial balance.\n      // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n      const initialBalance = config.initialBalance ? new bn_js_1.default(config.initialBalance) : new bn_js_1.default('500000000000000000000000000');\n      this.accountCreator = new account_creator_1.LocalAccountCreator(new account_1.Account(this.connection, config.masterAccount), initialBalance);\n    } else if (config.helperUrl) {\n      this.accountCreator = new account_creator_1.UrlAccountCreator(this.connection, config.helperUrl);\n    } else {\n      this.accountCreator = null;\n    }\n  }\n  /**\n   * @param accountId near accountId used to interact with the network.\n   */\n\n\n  async account(accountId) {\n    const account = new account_1.Account(this.connection, accountId);\n    return account;\n  }\n  /**\n   * Create an account using the {@link AccountCreator}. Either:\n   * * using a masterAccount with {@link LocalAccountCreator}\n   * * using the helperUrl with {@link UrlAccountCreator}\n   * @see {@link NearConfig.masterAccount} and {@link NearConfig.helperUrl}-\n   *\n   * @param accountId\n   * @param publicKey\n   */\n\n\n  async createAccount(accountId, publicKey) {\n    if (!this.accountCreator) {\n      throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n    }\n\n    await this.accountCreator.createAccount(accountId, publicKey);\n    return new account_1.Account(this.connection, accountId);\n  }\n  /**\n   * @deprecated Use {@link Contract} instead.\n   * @param contractId\n   * @param options\n   */\n\n\n  async loadContract(contractId, options) {\n    const account = new account_1.Account(this.connection, options.sender);\n    return new contract_1.Contract(account, contractId, options);\n  }\n  /**\n   * @deprecated Use {@link Account.sendMoney} instead.\n   * @param amount\n   * @param originator\n   * @param receiver\n   */\n\n\n  async sendTokens(amount, originator, receiver) {\n    console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n    const account = new account_1.Account(this.connection, originator);\n    const result = await account.sendMoney(receiver, amount);\n    return result.transaction_outcome.id;\n  }\n\n}\n\nexports.Near = Near;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","Near","bn_js_1","require","account_1","connection_1","contract_1","account_creator_1","constructor","config","connection","Connection","fromConfig","networkId","provider","type","args","url","nodeUrl","headers","signer","keyStore","deps","masterAccount","initialBalance","default","accountCreator","LocalAccountCreator","Account","helperUrl","UrlAccountCreator","account","accountId","createAccount","publicKey","Error","loadContract","contractId","options","sender","Contract","sendTokens","amount","originator","receiver","console","warn","result","sendMoney","transaction_outcome","id"],"sources":["/var/www/ch-8-car-renting/frontend/node_modules/near-api-js/lib/near.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Near = void 0;\n/**\n * This module contains the main class developers will use to interact with NEAR.\n * The {@link Near} class is used to interact with {@link Account | Accounts} through the {@link JsonRpcProvider.JsonRpcProvider | JsonRpcProvider}.\n * It is configured via the {@link NearConfig}.\n *\n * @example {@link https://docs.near.org/docs/develop/front-end/naj-quick-reference#account}\n *\n * @module near\n */\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst account_1 = require(\"./account\");\nconst connection_1 = require(\"./connection\");\nconst contract_1 = require(\"./contract\");\nconst account_creator_1 = require(\"./account_creator\");\n/**\n * This is the main class developers should use to interact with NEAR.\n * @example\n * ```js\n * const near = new Near(config);\n * ```\n */\nclass Near {\n    constructor(config) {\n        this.config = config;\n        this.connection = connection_1.Connection.fromConfig({\n            networkId: config.networkId,\n            provider: { type: 'JsonRpcProvider', args: { url: config.nodeUrl, headers: config.headers } },\n            signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || config.deps.keyStore }\n        });\n        if (config.masterAccount) {\n            // TODO: figure out better way of specifiying initial balance.\n            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n            const initialBalance = config.initialBalance ? new bn_js_1.default(config.initialBalance) : new bn_js_1.default('500000000000000000000000000');\n            this.accountCreator = new account_creator_1.LocalAccountCreator(new account_1.Account(this.connection, config.masterAccount), initialBalance);\n        }\n        else if (config.helperUrl) {\n            this.accountCreator = new account_creator_1.UrlAccountCreator(this.connection, config.helperUrl);\n        }\n        else {\n            this.accountCreator = null;\n        }\n    }\n    /**\n     * @param accountId near accountId used to interact with the network.\n     */\n    async account(accountId) {\n        const account = new account_1.Account(this.connection, accountId);\n        return account;\n    }\n    /**\n     * Create an account using the {@link AccountCreator}. Either:\n     * * using a masterAccount with {@link LocalAccountCreator}\n     * * using the helperUrl with {@link UrlAccountCreator}\n     * @see {@link NearConfig.masterAccount} and {@link NearConfig.helperUrl}-\n     *\n     * @param accountId\n     * @param publicKey\n     */\n    async createAccount(accountId, publicKey) {\n        if (!this.accountCreator) {\n            throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n        }\n        await this.accountCreator.createAccount(accountId, publicKey);\n        return new account_1.Account(this.connection, accountId);\n    }\n    /**\n     * @deprecated Use {@link Contract} instead.\n     * @param contractId\n     * @param options\n     */\n    async loadContract(contractId, options) {\n        const account = new account_1.Account(this.connection, options.sender);\n        return new contract_1.Contract(account, contractId, options);\n    }\n    /**\n     * @deprecated Use {@link Account.sendMoney} instead.\n     * @param amount\n     * @param originator\n     * @param receiver\n     */\n    async sendTokens(amount, originator, receiver) {\n        console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n        const account = new account_1.Account(this.connection, originator);\n        const result = await account.sendMoney(receiver, amount);\n        return result.transaction_outcome.id;\n    }\n}\nexports.Near = Near;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}