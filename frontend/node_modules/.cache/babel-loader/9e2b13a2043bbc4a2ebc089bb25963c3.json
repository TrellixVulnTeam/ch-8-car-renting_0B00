{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/es.array.at.js\";\nimport \"core-js/modules/es.string.at-alternative.js\";\nimport Big from \"big.js\";\nimport * as nearAPI from \"near-api-js\";\nimport { getTransactionState, getUrlParams } from \"../../../helpers\";\nimport { Contract } from \"near-api-js\";\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 13).toFixed();\nexport default {\n  name: \"SingleCarComponent\",\n  components: {},\n\n  data() {\n    return {\n      currentCar: {}\n    };\n  },\n\n  methods: {\n    async getCurrentCar() {\n      const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n      const argsBase64 = window.btoa(JSON.stringify({\n        id: +this.$route.params.id\n      }));\n      const rawResult = await provider.query({\n        request_type: \"call_function\",\n        finality: \"final\",\n        account_id: window.nearConfig.contractName,\n        method_name: \"get_car_by_id\",\n        args_base64: argsBase64\n      }).catch(() => {\n        this.$router.push({\n          'name': 'home'\n        });\n      });\n      this.currentCar = JSON.parse(Buffer.from(rawResult.result).toString());\n    },\n\n    async startRentCarProcess() {\n      let loader = this.$loading.show();\n      window.walletConnection.account().functionCall({\n        contractId: window.roketoWrapContractName,\n        methodName: 'near_deposit',\n        args: {},\n        gas: \"200000000000000\",\n        attachedDeposit: Big(((this.currentCar.price_per_hour + 0.2 * 10 ** 24) / 10 ** 24).toFixed(5)).times(10 ** 24).toFixed()\n      }).then(response => {\n        console.log(response);\n      });\n      loader.hide();\n    },\n\n    async afterNearDeposit() {\n      let loader = this.$loading.show();\n      const ftContract = new Contract(window.walletConnection.account(), window.roketoWrapContractName, {\n        changeMethods: ['ft_transfer_call', 'near_deposit']\n      });\n      const tokens_per_sec = BigInt(Big((this.currentCar.price_per_hour / 60 / 60 / 10 ** 24).toFixed(5)).times(10 ** 24).toFixed().toString());\n      await ftContract.ft_transfer_call({\n        receiver_id: window.roketoContractName,\n        amount: Big((this.currentCar.price_per_hour / 10 ** 24).toFixed(5)).times(10 ** 24).toFixed(),\n        // 1 NEAR\n        memo: 'Car rent #' + +this.$route.params.id,\n        msg: JSON.stringify({\n          Create: {\n            request: {\n              \"owner_id\": window.nearAccount.accountId,\n              \"receiver_id\": this.currentCar.owner_id,\n              \"tokens_per_sec\": tokens_per_sec // 1 month for 1 NEAR\n\n            }\n          }\n        })\n      }, 200000000000000, 1);\n      loader.hide();\n    },\n\n    cleanGetParams() {\n      window.history.pushState({}, document.title, process.env.VUE_APP_APP_URL + '#' + this.$route.fullPath);\n    },\n\n    async afterFtTransferCall() {\n      const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n      const argsBase64 = window.btoa(JSON.stringify({\n        account_id: window.nearAccount.accountId,\n        from: 1,\n        limit: 100\n      }));\n      const rawResult = await provider.query({\n        request_type: \"call_function\",\n        finality: \"final\",\n        account_id: window.roketoContractName,\n        method_name: \"get_account_outgoing_streams\",\n        args_base64: argsBase64\n      });\n      let outgoing_streams = JSON.parse(Buffer.from(rawResult.result).toString());\n      console.log(outgoing_streams);\n      let last_stream = outgoing_streams.at(-1);\n\n      try {\n        await window.walletConnection.account().functionCall({\n          contractId: window.nearConfig.contractName,\n          methodName: 'rent_car',\n          args: {\n            car_id: +this.$route.params.id,\n            stream_id: last_stream.id\n          },\n          gas: BOATLOAD_OF_GAS\n        }).then(async () => {\n          this.$swal.fire({\n            icon: 'success',\n            title: 'Success',\n            text: 'Car was rent!',\n            footer: ``\n          });\n          this.currentCar.is_rented = true; // await this.getCurrentCar();\n        });\n      } catch (error) {\n        this.$swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: error.message,\n          footer: ``\n        });\n        console.log(error);\n      }\n    },\n\n    async continueRentCarProcess() {\n      let params = getUrlParams();\n      let transactionHashes = params.get('transactionHashes');\n\n      if (transactionHashes !== null) {\n        let result = await getTransactionState(transactionHashes);\n\n        if (\"SuccessValue\" in result.status) {\n          const transactionMethodName = result.transaction.actions[0].FunctionCall.method_name;\n\n          switch (transactionMethodName) {\n            case 'near_deposit':\n              await this.afterNearDeposit();\n              this.cleanGetParams();\n              break;\n\n            case 'ft_transfer_call':\n              await this.afterFtTransferCall();\n              this.cleanGetParams();\n              break;\n\n            case 'get_account_outgoing_streams':\n              this.$swal.fire({\n                icon: 'success',\n                title: 'Success',\n                text: 'Car was rent!',\n                footer: ``\n              });\n              this.cleanGetParams();\n              break;\n          }\n        }\n      }\n    }\n\n  },\n\n  async mounted() {\n    let loader = this.$loading.show();\n    await this.getCurrentCar();\n    const ftContract = new Contract(window.walletConnection.account(), window.roketoWrapContractName, {\n      changeMethods: ['ft_transfer_call', 'near_deposit']\n    });\n    const tokens_per_sec = Big((this.currentCar.price_per_hour / 60 / 60 / 10 ** 24).toFixed(5)).times(10 ** 24).toFixed();\n    console.log(typeof tokens_per_sec);\n    console.log(this.currentCar.owner_id);\n    console.log(window.nearAccount.accountId); // window.walletConnection.account().functionCall({\n    //   contractId: window.roketoWrapContractName,\n    //   methodName: 'near_deposit',\n    //   args: {},\n    //   gas:\"200000000000000\",\n    //   attachedDeposit:Big(((this.currentCar.price_per_hour + (0.2 * 10**24)) / (10**24)).toFixed(5)).times(10 ** 24).toFixed(),\n    // }).then((response)=>{\n    //   console.log(response)\n    // });\n\n    const t = true;\n\n    if (t) {\n      await ftContract.ft_transfer_call({\n        receiver_id: window.roketoContractName,\n        amount: Big((this.currentCar.price_per_hour / 10 ** 24).toFixed(5)).times(10 ** 24).toFixed(),\n        // 1 NEAR\n        memo: 'Car rent #' + +this.$route.params.id,\n        msg: JSON.stringify({\n          Create: {\n            request: {\n              \"owner_id\": window.nearAccount.accountId,\n              \"receiver_id\": this.currentCar.owner_id,\n              \"tokens_per_sec\": 4000000 // 1 month for 1 NEAR\n\n            }\n          }\n        })\n      }, 200000000000000, 1);\n    }\n\n    await this.continueRentCarProcess();\n    loader.hide();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["Big","nearAPI","getTransactionState","getUrlParams","Contract","BOATLOAD_OF_GAS","times","toFixed","name","components","data","currentCar","methods","getCurrentCar","provider","providers","JsonRpcProvider","window","nearConfig","nodeUrl","argsBase64","btoa","JSON","stringify","id","$route","params","rawResult","query","request_type","finality","account_id","contractName","method_name","args_base64","catch","$router","push","parse","Buffer","from","result","toString","startRentCarProcess","loader","$loading","show","walletConnection","account","functionCall","contractId","roketoWrapContractName","methodName","args","gas","attachedDeposit","price_per_hour","then","response","console","log","hide","afterNearDeposit","ftContract","changeMethods","tokens_per_sec","BigInt","ft_transfer_call","receiver_id","roketoContractName","amount","memo","msg","Create","request","nearAccount","accountId","owner_id","cleanGetParams","history","pushState","document","title","process","env","VUE_APP_APP_URL","fullPath","afterFtTransferCall","limit","outgoing_streams","last_stream","at","car_id","stream_id","$swal","fire","icon","text","footer","is_rented","error","message","continueRentCarProcess","transactionHashes","get","status","transactionMethodName","transaction","actions","FunctionCall","mounted","t"],"sourceRoot":"","sources":["/var/www/ch-8-car-renting/frontend/src/components/Pages/SingleCarComponent.vue"],"sourcesContent":["<template>\n  <div class=\"site-section p-4\">\n    <div class=\"container\">\n      <div class=\"p-4 p-md-5 mb-4 text-white rounded bg-dark\">\n        <div class=\"row\">\n          <div class=\"col-6 px-0 d-flex flex-column justify-content-between\">\n            <div>\n              <h1 class=\"display-4 fst-italic\">{{ currentCar.title }}</h1>\n              <p class=\"lead my-3\">{{ currentCar.description }}</p>\n            </div>\n            <div>\n              <hr>\n              <p class=\"d-flex justify-content-between\"><span>Owner:</span><span>{{currentCar.owner_id}}</span></p>\n              <p class=\"d-flex justify-content-between\"><span>Price per hour:</span><span>{{$filters.formatYoctoNearToNear(currentCar.price_per_hour)}} Ⓝ</span></p>\n              <button class=\"btn btn-primary w-100\" @click.prevent=\"startRentCarProcess\" :disabled=\"currentCar.is_rented\">Rent car</button>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <img :src=\"currentCar.image\" alt=\"Image\" class=\"img-fluid\" style=\"width: 100%\">\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n\n</template>\n\n<script>\nimport Big from \"big.js\";\nimport * as nearAPI from \"near-api-js\";\nimport {getTransactionState, getUrlParams} from \"../../../helpers\";\nimport {Contract} from \"near-api-js\";\n\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 13).toFixed();\n\nexport default {\n  name: \"SingleCarComponent\",\n  components: {},\n  data() {\n    return {\n      currentCar: {},\n    }\n  },\n  methods: {\n    async getCurrentCar() {\n      const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n      const argsBase64 = window.btoa(JSON.stringify({id: +this.$route.params.id}))\n      const rawResult = await provider.query({\n        request_type: \"call_function\",\n        finality: \"final\",\n        account_id: window.nearConfig.contractName,\n        method_name: \"get_car_by_id\",\n        args_base64: argsBase64,\n      }).catch(() => {\n        this.$router.push({'name': 'home'});\n      });\n      this.currentCar = JSON.parse(Buffer.from(rawResult.result).toString())\n    },\n\n    async startRentCarProcess(){\n\n      let loader = this.$loading.show();\n      window.walletConnection.account().functionCall({\n        contractId: window.roketoWrapContractName,\n        methodName: 'near_deposit',\n        args: {},\n        gas:\"200000000000000\",\n        attachedDeposit:Big(((this.currentCar.price_per_hour + (0.2 * 10**24)) / (10**24)).toFixed(5)).times(10 ** 24).toFixed(),\n      }).then((response)=>{\n        console.log(response)\n      });\n      loader.hide();\n    },\n    async afterNearDeposit(){\n      let loader = this.$loading.show();\n      const ftContract = new Contract(window.walletConnection.account(), window.roketoWrapContractName, {\n        changeMethods: ['ft_transfer_call', 'near_deposit'],\n      });\n\n      const tokens_per_sec = BigInt(Big((this.currentCar.price_per_hour / 60 / 60 / (10**24)).toFixed(5)).times(10 ** 24).toFixed().toString());\n\n      await ftContract.ft_transfer_call({\n        receiver_id: window.roketoContractName,\n        amount: Big((this.currentCar.price_per_hour / (10**24)).toFixed(5)).times(10 ** 24).toFixed(), // 1 NEAR\n        memo: 'Car rent #' + +this.$route.params.id,\n        msg: JSON.stringify({\n          Create: {\n            request: {\n              \"owner_id\": window.nearAccount.accountId,\n              \"receiver_id\": this.currentCar.owner_id,\n              \"tokens_per_sec\": tokens_per_sec, // 1 month for 1 NEAR\n            }\n          }\n        }),\n      }, 200000000000000,1);\n      loader.hide();\n    },\n    cleanGetParams(){\n      window.history.pushState({}, document.title, process.env.VUE_APP_APP_URL + '#' + this.$route.fullPath);\n    },\n\n    async afterFtTransferCall(){\n      const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n      const argsBase64 = window.btoa(JSON.stringify({\n        account_id:window.nearAccount.accountId,\n        from:1,\n        limit:100\n      }))\n      const rawResult = await provider.query({\n        request_type: \"call_function\",\n        finality: \"final\",\n        account_id: window.roketoContractName,\n        method_name: \"get_account_outgoing_streams\",\n        args_base64: argsBase64,\n      });\n      let outgoing_streams = JSON.parse(Buffer.from(rawResult.result).toString());\n      console.log(outgoing_streams)\n      let last_stream = outgoing_streams.at(-1);\n      try {\n        await window.walletConnection.account().functionCall({\n          contractId: window.nearConfig.contractName,\n          methodName: 'rent_car',\n          args: {\n            car_id: +this.$route.params.id,\n            stream_id: last_stream.id\n          },\n          gas:BOATLOAD_OF_GAS,\n        }).then(async () => {\n          this.$swal.fire({\n            icon: 'success',\n            title: 'Success',\n            text: 'Car was rent!',\n            footer: ``,\n          })\n          this.currentCar.is_rented = true;\n          // await this.getCurrentCar();\n        });\n      } catch (error) {\n        this.$swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: error.message,\n          footer: ``,\n        })\n        console.log(error)\n      }\n    },\n\n    async continueRentCarProcess() {\n      let params = getUrlParams();\n      let transactionHashes = params.get('transactionHashes');\n      if (transactionHashes !== null){\n        let result = await getTransactionState(transactionHashes);\n        if (\"SuccessValue\" in result.status){\n          const transactionMethodName = result.transaction.actions[0].FunctionCall.method_name;\n          switch (transactionMethodName){\n            case 'near_deposit':\n              await this.afterNearDeposit();\n              this.cleanGetParams();\n              break;\n            case 'ft_transfer_call':\n              await this.afterFtTransferCall();\n              this.cleanGetParams();\n              break;\n            case 'get_account_outgoing_streams':\n              this.$swal.fire({\n                icon: 'success',\n                title: 'Success',\n                text: 'Car was rent!',\n                footer: ``,\n              })\n              this.cleanGetParams();\n              break;\n          }\n        }\n      }\n    },\n  },\n  async mounted() {\n    let loader = this.$loading.show();\n    await this.getCurrentCar();\n\n    const ftContract = new Contract(window.walletConnection.account(), window.roketoWrapContractName, {\n      changeMethods: ['ft_transfer_call', 'near_deposit'],\n    });\n\n    const tokens_per_sec = Big((this.currentCar.price_per_hour / 60 / 60 / (10**24)).toFixed(5)).times(10 ** 24).toFixed();\n    console.log(typeof tokens_per_sec)\n    console.log(this.currentCar.owner_id)\n    console.log(window.nearAccount.accountId)\n    // window.walletConnection.account().functionCall({\n    //   contractId: window.roketoWrapContractName,\n    //   methodName: 'near_deposit',\n    //   args: {},\n    //   gas:\"200000000000000\",\n    //   attachedDeposit:Big(((this.currentCar.price_per_hour + (0.2 * 10**24)) / (10**24)).toFixed(5)).times(10 ** 24).toFixed(),\n    // }).then((response)=>{\n    //   console.log(response)\n    // });\n    const t = true;\n    if(t){\n      await ftContract.ft_transfer_call({\n        receiver_id: window.roketoContractName,\n        amount: Big((this.currentCar.price_per_hour / (10**24)).toFixed(5)).times(10 ** 24).toFixed(), // 1 NEAR\n        memo: 'Car rent #' + +this.$route.params.id,\n        msg: JSON.stringify({\n          Create: {\n            request: {\n              \"owner_id\": window.nearAccount.accountId,\n              \"receiver_id\": this.currentCar.owner_id,\n              \"tokens_per_sec\": 4000000, // 1 month for 1 NEAR\n            }\n          }\n        }),\n      }, 200000000000000,1);\n    }\n\n\n    await this.continueRentCarProcess();\n    loader.hide();\n  },\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}