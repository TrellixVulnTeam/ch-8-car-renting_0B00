{"ast":null,"code":"import \"core-js/modules/es.typed-array.at.js\";\nimport \"core-js/modules/es.typed-array.set.js\";\nimport \"core-js/modules/es.error.cause.js\";\nimport { asyncIterableReader, bytesReader, createDecoder } from './decoder.js';\nexport class CarReader {\n  constructor(version, roots, blocks) {\n    this._version = version;\n    this._roots = roots;\n    this._blocks = blocks;\n    this._keys = blocks.map(b => b.cid.toString());\n  }\n\n  get version() {\n    return this._version;\n  }\n\n  async getRoots() {\n    return this._roots;\n  }\n\n  async has(key) {\n    return this._keys.indexOf(key.toString()) > -1;\n  }\n\n  async get(key) {\n    const index = this._keys.indexOf(key.toString());\n\n    return index > -1 ? this._blocks[index] : undefined;\n  }\n\n  async *blocks() {\n    for (const block of this._blocks) {\n      yield block;\n    }\n  }\n\n  async *cids() {\n    for (const block of this._blocks) {\n      yield block.cid;\n    }\n  }\n\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n\n    return decodeReaderComplete(bytesReader(bytes));\n  }\n\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n\n    return decodeReaderComplete(asyncIterableReader(asyncIterable));\n  }\n\n}\n\nasync function decodeReaderComplete(reader) {\n  const decoder = createDecoder(reader);\n  const {\n    version,\n    roots\n  } = await decoder.header();\n  const blocks = [];\n\n  for await (const block of decoder.blocks()) {\n    blocks.push(block);\n  }\n\n  return new CarReader(version, roots, blocks);\n}\n\nexport const __browser = true;","map":{"version":3,"names":["asyncIterableReader","bytesReader","createDecoder","CarReader","constructor","version","roots","blocks","_version","_roots","_blocks","_keys","map","b","cid","toString","getRoots","has","key","indexOf","get","index","undefined","block","cids","fromBytes","bytes","Uint8Array","TypeError","decodeReaderComplete","fromIterable","asyncIterable","Symbol","asyncIterator","reader","decoder","header","push","__browser"],"sources":["/var/www/ch-8-car-renting/frontend/node_modules/@ipld/car/esm/lib/reader-browser.js"],"sourcesContent":["import {\n  asyncIterableReader,\n  bytesReader,\n  createDecoder\n} from './decoder.js';\nexport class CarReader {\n  constructor(version, roots, blocks) {\n    this._version = version;\n    this._roots = roots;\n    this._blocks = blocks;\n    this._keys = blocks.map(b => b.cid.toString());\n  }\n  get version() {\n    return this._version;\n  }\n  async getRoots() {\n    return this._roots;\n  }\n  async has(key) {\n    return this._keys.indexOf(key.toString()) > -1;\n  }\n  async get(key) {\n    const index = this._keys.indexOf(key.toString());\n    return index > -1 ? this._blocks[index] : undefined;\n  }\n  async *blocks() {\n    for (const block of this._blocks) {\n      yield block;\n    }\n  }\n  async *cids() {\n    for (const block of this._blocks) {\n      yield block.cid;\n    }\n  }\n  static async fromBytes(bytes) {\n    if (!(bytes instanceof Uint8Array)) {\n      throw new TypeError('fromBytes() requires a Uint8Array');\n    }\n    return decodeReaderComplete(bytesReader(bytes));\n  }\n  static async fromIterable(asyncIterable) {\n    if (!asyncIterable || !(typeof asyncIterable[Symbol.asyncIterator] === 'function')) {\n      throw new TypeError('fromIterable() requires an async iterable');\n    }\n    return decodeReaderComplete(asyncIterableReader(asyncIterable));\n  }\n}\nasync function decodeReaderComplete(reader) {\n  const decoder = createDecoder(reader);\n  const {version, roots} = await decoder.header();\n  const blocks = [];\n  for await (const block of decoder.blocks()) {\n    blocks.push(block);\n  }\n  return new CarReader(version, roots, blocks);\n}\nexport const __browser = true;"],"mappings":";;;AAAA,SACEA,mBADF,EAEEC,WAFF,EAGEC,aAHF,QAIO,cAJP;AAKA,OAAO,MAAMC,SAAN,CAAgB;EACrBC,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiBC,MAAjB,EAAyB;IAClC,KAAKC,QAAL,GAAgBH,OAAhB;IACA,KAAKI,MAAL,GAAcH,KAAd;IACA,KAAKI,OAAL,GAAeH,MAAf;IACA,KAAKI,KAAL,GAAaJ,MAAM,CAACK,GAAP,CAAWC,CAAC,IAAIA,CAAC,CAACC,GAAF,CAAMC,QAAN,EAAhB,CAAb;EACD;;EACU,IAAPV,OAAO,GAAG;IACZ,OAAO,KAAKG,QAAZ;EACD;;EACa,MAARQ,QAAQ,GAAG;IACf,OAAO,KAAKP,MAAZ;EACD;;EACQ,MAAHQ,GAAG,CAACC,GAAD,EAAM;IACb,OAAO,KAAKP,KAAL,CAAWQ,OAAX,CAAmBD,GAAG,CAACH,QAAJ,EAAnB,IAAqC,CAAC,CAA7C;EACD;;EACQ,MAAHK,GAAG,CAACF,GAAD,EAAM;IACb,MAAMG,KAAK,GAAG,KAAKV,KAAL,CAAWQ,OAAX,CAAmBD,GAAG,CAACH,QAAJ,EAAnB,CAAd;;IACA,OAAOM,KAAK,GAAG,CAAC,CAAT,GAAa,KAAKX,OAAL,CAAaW,KAAb,CAAb,GAAmCC,SAA1C;EACD;;EACY,OAANf,MAAM,GAAG;IACd,KAAK,MAAMgB,KAAX,IAAoB,KAAKb,OAAzB,EAAkC;MAChC,MAAMa,KAAN;IACD;EACF;;EACU,OAAJC,IAAI,GAAG;IACZ,KAAK,MAAMD,KAAX,IAAoB,KAAKb,OAAzB,EAAkC;MAChC,MAAMa,KAAK,CAACT,GAAZ;IACD;EACF;;EACqB,aAATW,SAAS,CAACC,KAAD,EAAQ;IAC5B,IAAI,EAAEA,KAAK,YAAYC,UAAnB,CAAJ,EAAoC;MAClC,MAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;IACD;;IACD,OAAOC,oBAAoB,CAAC5B,WAAW,CAACyB,KAAD,CAAZ,CAA3B;EACD;;EACwB,aAAZI,YAAY,CAACC,aAAD,EAAgB;IACvC,IAAI,CAACA,aAAD,IAAkB,EAAE,OAAOA,aAAa,CAACC,MAAM,CAACC,aAAR,CAApB,KAA+C,UAAjD,CAAtB,EAAoF;MAClF,MAAM,IAAIL,SAAJ,CAAc,2CAAd,CAAN;IACD;;IACD,OAAOC,oBAAoB,CAAC7B,mBAAmB,CAAC+B,aAAD,CAApB,CAA3B;EACD;;AAzCoB;;AA2CvB,eAAeF,oBAAf,CAAoCK,MAApC,EAA4C;EAC1C,MAAMC,OAAO,GAAGjC,aAAa,CAACgC,MAAD,CAA7B;EACA,MAAM;IAAC7B,OAAD;IAAUC;EAAV,IAAmB,MAAM6B,OAAO,CAACC,MAAR,EAA/B;EACA,MAAM7B,MAAM,GAAG,EAAf;;EACA,WAAW,MAAMgB,KAAjB,IAA0BY,OAAO,CAAC5B,MAAR,EAA1B,EAA4C;IAC1CA,MAAM,CAAC8B,IAAP,CAAYd,KAAZ;EACD;;EACD,OAAO,IAAIpB,SAAJ,CAAcE,OAAd,EAAuBC,KAAvB,EAA8BC,MAA9B,CAAP;AACD;;AACD,OAAO,MAAM+B,SAAS,GAAG,IAAlB"},"metadata":{},"sourceType":"module"}