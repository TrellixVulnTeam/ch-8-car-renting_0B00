{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\n// import Big from \"big.js\";\nimport * as nearAPI from \"near-api-js\"; //network config (replace testnet with mainnet or betanet)\n\nasync function createStream() {\n  // // \"J3Wit8ifeNJjEYNr7AEymkkVbo3k5fJVmshKSkd4aHRY\"\n  // const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n  //\n  // const argsBase64 = window.btoa(JSON.stringify({\n  //     token_account_id:window.nearAccount.accountId\n  // }))\n  // const rawResult = await provider.query({\n  //     request_type: \"call_function\",\n  //     finality: \"final\",\n  //     account_id: 'streaming-r-v2.dcversus.testnet',\n  //     method_name: \"get_stream\",\n  //     args_base64: argsBase64,\n  // });\n  // console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n  const TX_HASH = \"E5hDHujqqmfvTPsscTVzCpH6LA9YsPgXfPfC8Q4pXCYz\";\n  let result = await getState(TX_HASH, window.nearAccount.accountId);\n\n  if (\"SuccessValue\" in result.status) {\n    if (result.transaction.actions[0].FunctionCall.method_name === 'near_deposit') {\n      console.log(\"Result: \", result);\n    }\n  }\n\n  await ftContract.ft_transfer_call({\n    receiver_id: 'streaming-r-v2.dcversus.testnet',\n    amount: '1000000000000000000000000',\n    // 1 NEAR\n    memo: 'Roketo transfer',\n    msg: JSON.stringify({\n      Create: {\n        request: {\n          \"owner_id\": window.nearAccount.accountId,\n          \"receiver_id\": \"rocketotest2.testnet\",\n          \"tokens_per_sec\": 385802469135802469 // 1 month for 1 NEAR\n\n        }\n      }\n    })\n  }, 200000000000000, 1);\n}\n\nasync function init() {\n  // \"J3Wit8ifeNJjEYNr7AEymkkVbo3k5fJVmshKSkd4aHRY\"\n  const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n  const argsBase64 = window.btoa(JSON.stringify({\n    stream_id: \"IjAi\"\n  }));\n  const rawResult = await provider.query({\n    request_type: \"call_function\",\n    finality: \"final\",\n    account_id: 'streaming-r-v2.dcversus.testnet',\n    method_name: \"get_stream\",\n    args_base64: argsBase64\n  });\n  console.log(JSON.parse(Buffer.from(rawResult.result).toString())); // const argsBase64 = window.btoa(JSON.stringify({\n  //     account_id:window.nearAccount.accountId,\n  //     from:1,\n  //     limit:10\n  // }))\n  // const rawResult = await provider.query({\n  //     request_type: \"call_function\",\n  //     finality: \"final\",\n  //     account_id: 'streaming-r-v2.dcversus.testnet',\n  //     method_name: \"get_account_outgoing_streams\",\n  //     args_base64: argsBase64,\n  // });\n  // console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n}\n\nexport { init };","map":{"version":3,"names":["nearAPI","createStream","TX_HASH","result","getState","window","nearAccount","accountId","status","transaction","actions","FunctionCall","method_name","console","log","ftContract","ft_transfer_call","receiver_id","amount","memo","msg","JSON","stringify","Create","request","init","provider","providers","JsonRpcProvider","nearConfig","nodeUrl","argsBase64","btoa","stream_id","rawResult","query","request_type","finality","account_id","args_base64","parse","Buffer","from","toString"],"sources":["/var/www/ch-8-car-renting/frontend/src/roketoNearJsService.js"],"sourcesContent":["// import Big from \"big.js\";\nimport * as nearAPI from \"near-api-js\";\n//network config (replace testnet with mainnet or betanet)\n\nasync function createStream(){\n\n    // // \"J3Wit8ifeNJjEYNr7AEymkkVbo3k5fJVmshKSkd4aHRY\"\n    // const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n    //\n    // const argsBase64 = window.btoa(JSON.stringify({\n    //     token_account_id:window.nearAccount.accountId\n    // }))\n    // const rawResult = await provider.query({\n    //     request_type: \"call_function\",\n    //     finality: \"final\",\n    //     account_id: 'streaming-r-v2.dcversus.testnet',\n    //     method_name: \"get_stream\",\n    //     args_base64: argsBase64,\n    // });\n    // console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n    const TX_HASH = \"E5hDHujqqmfvTPsscTVzCpH6LA9YsPgXfPfC8Q4pXCYz\";\n\n    let result = await getState(TX_HASH, window.nearAccount.accountId);\n    if (\"SuccessValue\" in result.status){\n        if (result.transaction.actions[0].FunctionCall.method_name === 'near_deposit'){\n            console.log(\"Result: \", result);\n        }\n    }\n\n    await ftContract.ft_transfer_call({\n        receiver_id: 'streaming-r-v2.dcversus.testnet',\n        amount: '1000000000000000000000000', // 1 NEAR\n        memo: 'Roketo transfer',\n        msg: JSON.stringify({\n            Create: {\n                request: {\n                    \"owner_id\": window.nearAccount.accountId,\n                    \"receiver_id\": \"rocketotest2.testnet\",\n                    \"tokens_per_sec\": 385802469135802469, // 1 month for 1 NEAR\n                }\n            }\n        }),\n    }, 200000000000000,1);\n\n}\nasync function init() {\n    // \"J3Wit8ifeNJjEYNr7AEymkkVbo3k5fJVmshKSkd4aHRY\"\n    const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n\n    const argsBase64 = window.btoa(JSON.stringify({\n        stream_id:\"IjAi\"\n    }))\n    const rawResult = await provider.query({\n        request_type: \"call_function\",\n        finality: \"final\",\n        account_id: 'streaming-r-v2.dcversus.testnet',\n        method_name: \"get_stream\",\n        args_base64: argsBase64,\n    });\n    console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n\n\n\n\n\n\n\n\n    // const argsBase64 = window.btoa(JSON.stringify({\n    //     account_id:window.nearAccount.accountId,\n    //     from:1,\n    //     limit:10\n    // }))\n    // const rawResult = await provider.query({\n    //     request_type: \"call_function\",\n    //     finality: \"final\",\n    //     account_id: 'streaming-r-v2.dcversus.testnet',\n    //     method_name: \"get_account_outgoing_streams\",\n    //     args_base64: argsBase64,\n    // });\n    // console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n\n}\n\nexport {init}"],"mappings":";AAAA;AACA,OAAO,KAAKA,OAAZ,MAAyB,aAAzB,C,CACA;;AAEA,eAAeC,YAAf,GAA6B;EAEzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,OAAO,GAAG,8CAAhB;EAEA,IAAIC,MAAM,GAAG,MAAMC,QAAQ,CAACF,OAAD,EAAUG,MAAM,CAACC,WAAP,CAAmBC,SAA7B,CAA3B;;EACA,IAAI,kBAAkBJ,MAAM,CAACK,MAA7B,EAAoC;IAChC,IAAIL,MAAM,CAACM,WAAP,CAAmBC,OAAnB,CAA2B,CAA3B,EAA8BC,YAA9B,CAA2CC,WAA3C,KAA2D,cAA/D,EAA8E;MAC1EC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBX,MAAxB;IACH;EACJ;;EAED,MAAMY,UAAU,CAACC,gBAAX,CAA4B;IAC9BC,WAAW,EAAE,iCADiB;IAE9BC,MAAM,EAAE,2BAFsB;IAEO;IACrCC,IAAI,EAAE,iBAHwB;IAI9BC,GAAG,EAAEC,IAAI,CAACC,SAAL,CAAe;MAChBC,MAAM,EAAE;QACJC,OAAO,EAAE;UACL,YAAYnB,MAAM,CAACC,WAAP,CAAmBC,SAD1B;UAEL,eAAe,sBAFV;UAGL,kBAAkB,kBAHb,CAGiC;;QAHjC;MADL;IADQ,CAAf;EAJyB,CAA5B,EAaH,eAbG,EAaa,CAbb,CAAN;AAeH;;AACD,eAAekB,IAAf,GAAsB;EAClB;EACA,MAAMC,QAAQ,GAAG,IAAI1B,OAAO,CAAC2B,SAAR,CAAkBC,eAAtB,CAAsCvB,MAAM,CAACwB,UAAP,CAAkBC,OAAxD,CAAjB;EAEA,MAAMC,UAAU,GAAG1B,MAAM,CAAC2B,IAAP,CAAYX,IAAI,CAACC,SAAL,CAAe;IAC1CW,SAAS,EAAC;EADgC,CAAf,CAAZ,CAAnB;EAGA,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,KAAT,CAAe;IACnCC,YAAY,EAAE,eADqB;IAEnCC,QAAQ,EAAE,OAFyB;IAGnCC,UAAU,EAAE,iCAHuB;IAInC1B,WAAW,EAAE,YAJsB;IAKnC2B,WAAW,EAAER;EALsB,CAAf,CAAxB;EAOAlB,OAAO,CAACC,GAAR,CAAYO,IAAI,CAACmB,KAAL,CAAWC,MAAM,CAACC,IAAP,CAAYR,SAAS,CAAC/B,MAAtB,EAA8BwC,QAA9B,EAAX,CAAZ,EAdkB,CAuBlB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEH;;AAED,SAAQlB,IAAR"},"metadata":{},"sourceType":"module"}