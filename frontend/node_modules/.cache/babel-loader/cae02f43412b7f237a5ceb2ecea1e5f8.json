{"ast":null,"code":"import { Contract } from \"near-api-js\"; // import * as nearAPI from \"near-api-js\";\n\nasync function getState(txHash, accountId) {\n  const result = await window.walletConnection.provider.txStatus(txHash, accountId);\n  console.log(\"Result: \", result);\n}\n\nasync function createStream() {\n  const ftContract = new Contract(window.walletConnection.account(), 'wrap.testnet', {\n    changeMethods: ['ft_transfer_call', 'near_deposit']\n  });\n  await ftContract.near_deposit({}, \"200000000000000\", \"1000000000000000000000000\");\n  await ftContract.ft_transfer_call({\n    receiver_id: 'streaming-r-v2.dcversus.testnet',\n    amount: '1000000000000000000000000',\n    // 1 NEAR\n    memo: 'Roketo transfer',\n    msg: JSON.stringify({\n      Create: {\n        request: {\n          \"owner_id\": window.nearAccount.accountId,\n          \"receiver_id\": \"rocketotest2.testnet\",\n          \"tokens_per_sec\": 385802469135802469 // 1 month for 1 NEAR\n\n        }\n      }\n    })\n  }, 200000000000000, 1);\n} // async function init() {\n//\n//     console.log(ftContract)\n//     // \"J3Wit8ifeNJjEYNr7AEymkkVbo3k5fJVmshKSkd4aHRY\"\n//     const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n//\n//     const argsBase64 = window.btoa(JSON.stringify({\n//         stream_id:\"J3Wit8ifeNJjEYNr7AEymkkVbo3k5fJVmshKSkd4aHRY\"\n//     }))\n//     const rawResult = await provider.query({\n//         request_type: \"call_function\",\n//         finality: \"final\",\n//         account_id: 'streaming-r-v2.dcversus.testnet',\n//         method_name: \"get_stream\",\n//         args_base64: argsBase64,\n//     });\n//     console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n//\n//\n//\n//\n//\n//\n//\n//\n//     // const argsBase64 = window.btoa(JSON.stringify({\n//     //     account_id:window.nearAccount.accountId,\n//     //     from:1,\n//     //     limit:10\n//     // }))\n//     // const rawResult = await provider.query({\n//     //     request_type: \"call_function\",\n//     //     finality: \"final\",\n//     //     account_id: 'streaming-r-v2.dcversus.testnet',\n//     //     method_name: \"get_account_outgoing_streams\",\n//     //     args_base64: argsBase64,\n//     // });\n//     // console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n//\n// }\n\n\nexport { createStream };","map":{"version":3,"names":["Contract","getState","txHash","accountId","result","window","walletConnection","provider","txStatus","console","log","createStream","ftContract","account","changeMethods","near_deposit","ft_transfer_call","receiver_id","amount","memo","msg","JSON","stringify","Create","request","nearAccount"],"sources":["/var/www/ch-8-car-renting/frontend/src/roketoNearJsService.js"],"sourcesContent":["import {Contract} from \"near-api-js\";\n// import * as nearAPI from \"near-api-js\";\nasync function getState(txHash, accountId) {\n    const result = await window.walletConnection.provider.txStatus(txHash, accountId);\n    console.log(\"Result: \", result);\n}\nasync function createStream(){\n    const ftContract = new Contract(window.walletConnection.account(), 'wrap.testnet', {\n        changeMethods: ['ft_transfer_call', 'near_deposit'],\n    });\n    await ftContract.near_deposit({}, \"200000000000000\", \"1000000000000000000000000\");\n    await ftContract.ft_transfer_call({\n        receiver_id: 'streaming-r-v2.dcversus.testnet',\n        amount: '1000000000000000000000000', // 1 NEAR\n        memo: 'Roketo transfer',\n        msg: JSON.stringify({\n            Create: {\n                request: {\n                    \"owner_id\": window.nearAccount.accountId,\n                    \"receiver_id\": \"rocketotest2.testnet\",\n                    \"tokens_per_sec\": 385802469135802469, // 1 month for 1 NEAR\n                }\n            }\n        }),\n    }, 200000000000000,1);\n\n}\n// async function init() {\n//\n//     console.log(ftContract)\n//     // \"J3Wit8ifeNJjEYNr7AEymkkVbo3k5fJVmshKSkd4aHRY\"\n//     const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n//\n//     const argsBase64 = window.btoa(JSON.stringify({\n//         stream_id:\"J3Wit8ifeNJjEYNr7AEymkkVbo3k5fJVmshKSkd4aHRY\"\n//     }))\n//     const rawResult = await provider.query({\n//         request_type: \"call_function\",\n//         finality: \"final\",\n//         account_id: 'streaming-r-v2.dcversus.testnet',\n//         method_name: \"get_stream\",\n//         args_base64: argsBase64,\n//     });\n//     console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n//\n//\n//\n//\n//\n//\n//\n//\n//     // const argsBase64 = window.btoa(JSON.stringify({\n//     //     account_id:window.nearAccount.accountId,\n//     //     from:1,\n//     //     limit:10\n//     // }))\n//     // const rawResult = await provider.query({\n//     //     request_type: \"call_function\",\n//     //     finality: \"final\",\n//     //     account_id: 'streaming-r-v2.dcversus.testnet',\n//     //     method_name: \"get_account_outgoing_streams\",\n//     //     args_base64: argsBase64,\n//     // });\n//     // console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n//\n// }\n\nexport {createStream}"],"mappings":"AAAA,SAAQA,QAAR,QAAuB,aAAvB,C,CACA;;AACA,eAAeC,QAAf,CAAwBC,MAAxB,EAAgCC,SAAhC,EAA2C;EACvC,MAAMC,MAAM,GAAG,MAAMC,MAAM,CAACC,gBAAP,CAAwBC,QAAxB,CAAiCC,QAAjC,CAA0CN,MAA1C,EAAkDC,SAAlD,CAArB;EACAM,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,MAAxB;AACH;;AACD,eAAeO,YAAf,GAA6B;EACzB,MAAMC,UAAU,GAAG,IAAIZ,QAAJ,CAAaK,MAAM,CAACC,gBAAP,CAAwBO,OAAxB,EAAb,EAAgD,cAAhD,EAAgE;IAC/EC,aAAa,EAAE,CAAC,kBAAD,EAAqB,cAArB;EADgE,CAAhE,CAAnB;EAGA,MAAMF,UAAU,CAACG,YAAX,CAAwB,EAAxB,EAA4B,iBAA5B,EAA+C,2BAA/C,CAAN;EACA,MAAMH,UAAU,CAACI,gBAAX,CAA4B;IAC9BC,WAAW,EAAE,iCADiB;IAE9BC,MAAM,EAAE,2BAFsB;IAEO;IACrCC,IAAI,EAAE,iBAHwB;IAI9BC,GAAG,EAAEC,IAAI,CAACC,SAAL,CAAe;MAChBC,MAAM,EAAE;QACJC,OAAO,EAAE;UACL,YAAYnB,MAAM,CAACoB,WAAP,CAAmBtB,SAD1B;UAEL,eAAe,sBAFV;UAGL,kBAAkB,kBAHb,CAGiC;;QAHjC;MADL;IADQ,CAAf;EAJyB,CAA5B,EAaH,eAbG,EAaa,CAbb,CAAN;AAeH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAQQ,YAAR"},"metadata":{},"sourceType":"module"}