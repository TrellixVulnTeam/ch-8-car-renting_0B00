{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport Big from \"big.js\";\nimport * as nearAPI from \"near-api-js\";\nimport { getTransactionState, getUrlParams } from \"../../../helpers\";\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 13).toFixed();\nexport default {\n  name: \"SingleCarComponent\",\n  components: {},\n\n  data() {\n    return {\n      currentCar: {}\n    };\n  },\n\n  methods: {\n    async getCurrentCar() {\n      const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n      const argsBase64 = window.btoa(JSON.stringify({\n        id: +this.$route.params.id\n      }));\n      const rawResult = await provider.query({\n        request_type: \"call_function\",\n        finality: \"final\",\n        account_id: window.nearConfig.contractName,\n        method_name: \"get_car_by_id\",\n        args_base64: argsBase64\n      }).catch(() => {\n        this.$router.push({\n          'name': 'home'\n        });\n      });\n      this.currentCar = JSON.parse(Buffer.from(rawResult.result).toString());\n    },\n\n    async startRentCarProcess() {\n      let loader = this.$loading.show();\n      window.walletConnection.account().functionCall({\n        contractId: window.roketoWrapContractName,\n        methodName: 'near_deposit',\n        args: {},\n        gas: \"200000000000000\",\n        attachedDeposit: Big((this.currentCar.price_per_hour / 10 ** 24).toFixed(5)).times(10 ** 24).toFixed()\n      }).then(response => {\n        console.log(response);\n      });\n      loader.hide();\n    },\n\n    async afterNearDeposit() {\n      let loader = this.$loading.show();\n      await ftContract.ft_transfer_call({\n        receiver_id: 'streaming-r-v2.dcversus.testnet',\n        amount: '1000000000000000000000000',\n        // 1 NEAR\n        memo: 'Roketo transfer',\n        msg: JSON.stringify({\n          Create: {\n            request: {\n              \"owner_id\": \"yourname.testnet\",\n              \"receiver_id\": \"dcversus.testnet\",\n              \"tokens_per_sec\": 385802469135802469 // 1 month for 1 NEAR\n\n            }\n          }\n        })\n      }, 200000000000000);\n      window.walletConnection.account().functionCall({\n        contractId: window.roketoWrapContractName,\n        methodName: 'ft_transfer_call',\n        args: {\n          receiver_id: window.roketoContractName,\n          amount: Big((this.currentCar.price_per_hour / 10 ** 24).toFixed(5)).times(10 ** 24).toFixed(),\n          memo: 'Car rent #' + this.currentCar.id,\n          msg: JSON.stringify({\n            Create: {\n              request: {\n                \"owner_id\": window.nearAccount.accountId,\n                \"receiver_id\": this.currentCar.owner_id,\n                \"tokens_per_sec\": Big((this.currentCar.price_per_hour / 60 / 60 / 10 ** 24).toFixed(5)).times(10 ** 24).toFixed() // speed for 1 hour\n\n              }\n            }\n          })\n        },\n        gas: \"200000000000000\",\n        attachedDeposit: 1\n      }).then(response => {\n        console.log(response);\n      });\n      loader.hide();\n    },\n\n    cleanGetParams() {\n      window.history.pushState({}, document.title, process.env.VUE_APP_APP_URL + '#' + this.$route.fullPath);\n    },\n\n    async afterFtTransferCall() {\n      const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n      const argsBase64 = window.btoa(JSON.stringify({\n        account_id: window.nearAccount.accountId,\n        from: 1,\n        limit: 10\n      }));\n      const rawResult = await provider.query({\n        request_type: \"call_function\",\n        finality: \"final\",\n        account_id: window.roketoContractName,\n        method_name: \"get_account_outgoing_streams\",\n        args_base64: argsBase64\n      });\n      console.log(JSON.parse(Buffer.from(rawResult.result).toString()));\n\n      try {\n        // let result = await createStream();\n        // console.log(result)\n        // console.log(BOATLOAD_OF_GAS)\n        // await window.walletConnection.account().functionCall({\n        //   contractId: window.nearConfig.contractName,\n        //   methodName: 'rent_car',\n        //   args: {\n        //     car_id: +this.$route.params.id\n        //   },\n        //   gas:BOATLOAD_OF_GAS,\n        //   walletCallbackUrl: window.location.href\n        // }).then(()=>{\n        //   this.$swal.fire({\n        //     icon: 'success',\n        //     title: 'Success',\n        //     text: 'Your Car has been added to renting page!',\n        //     footer: ``,\n        //   });\n        // });\n        this.$swal.fire({\n          icon: 'success',\n          title: 'Success',\n          text: 'Car was rent!',\n          footer: ``\n        });\n        await this.getCurrentCar();\n      } catch (error) {\n        this.$swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: error.message,\n          footer: ``\n        });\n        console.log(error);\n      }\n    },\n\n    async continueRentCarProcess() {\n      let params = getUrlParams();\n      let transactionHashes = params.get('transactionHashes');\n\n      if (transactionHashes !== null) {\n        let result = await getTransactionState(transactionHashes);\n\n        if (\"SuccessValue\" in result.status) {\n          const transactionMethodName = result.transaction.actions[0].FunctionCall.method_name;\n\n          switch (transactionMethodName) {\n            case 'near_deposit':\n              await this.afterNearDeposit();\n              this.cleanGetParams();\n              break;\n\n            case 'ft_transfer_call':\n              await this.afterFtTransferCall();\n              this.cleanGetParams();\n              break;\n          }\n        }\n      }\n    }\n\n  },\n\n  async mounted() {\n    let loader = this.$loading.show();\n    await this.getCurrentCar();\n    await this.continueRentCarProcess();\n    loader.hide(); // const transactionHash = params.get('transactionHashes');\n    // if(transactionHash){\n    //   this.$swal.fire({\n    //     icon: 'success',\n    //     title: 'Success',\n    //     text: 'Ticket was successfully bought!',\n    //     footer: `To look at your ticket go to your wallet collectibles!`,\n    //   })\n    // }\n  }\n\n};","map":{"version":3,"mappings":"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","names":["Big","nearAPI","getTransactionState","getUrlParams","BOATLOAD_OF_GAS","times","toFixed","name","components","data","currentCar","methods","getCurrentCar","provider","providers","JsonRpcProvider","window","nearConfig","nodeUrl","argsBase64","btoa","JSON","stringify","id","$route","params","rawResult","query","request_type","finality","account_id","contractName","method_name","args_base64","catch","$router","push","parse","Buffer","from","result","toString","startRentCarProcess","loader","$loading","show","walletConnection","account","functionCall","contractId","roketoWrapContractName","methodName","args","gas","attachedDeposit","price_per_hour","then","response","console","log","hide","afterNearDeposit","ftContract","ft_transfer_call","receiver_id","amount","memo","msg","Create","request","roketoContractName","nearAccount","accountId","owner_id","cleanGetParams","history","pushState","document","title","process","env","VUE_APP_APP_URL","fullPath","afterFtTransferCall","limit","$swal","fire","icon","text","footer","error","message","continueRentCarProcess","transactionHashes","get","status","transactionMethodName","transaction","actions","FunctionCall","mounted"],"sourceRoot":"","sources":["/var/www/ch-8-car-renting/frontend/src/components/Pages/SingleCarComponent.vue"],"sourcesContent":["<template>\n  <div class=\"site-section p-4\">\n    <div class=\"container\">\n      <div class=\"p-4 p-md-5 mb-4 text-white rounded bg-dark\">\n        <div class=\"row\">\n          <div class=\"col-6 px-0 d-flex flex-column justify-content-between\">\n            <div>\n              <h1 class=\"display-4 fst-italic\">{{ currentCar.title }}</h1>\n              <p class=\"lead my-3\">{{ currentCar.description }}</p>\n            </div>\n            <div>\n              <hr>\n              <p class=\"d-flex justify-content-between\"><span>Owner:</span><span>{{currentCar.owner_id}}</span></p>\n              <p class=\"d-flex justify-content-between\"><span>Price per hour:</span><span>{{$filters.formatYoctoNearToNear(currentCar.price_per_hour)}} Ⓝ</span></p>\n              <button class=\"btn btn-primary\" @click.prevent=\"startRentCarProcess\">Rent car</button>\n            </div>\n          </div>\n          <div class=\"col-6\">\n            <img :src=\"currentCar.image\" alt=\"Image\" class=\"img-fluid\" style=\"width: 100%\">\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n\n</template>\n\n<script>\nimport Big from \"big.js\";\nimport * as nearAPI from \"near-api-js\";\nimport {getTransactionState, getUrlParams} from \"../../../helpers\";\n\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 13).toFixed();\n\nexport default {\n  name: \"SingleCarComponent\",\n  components: {},\n  data() {\n    return {\n      currentCar: {},\n    }\n  },\n  methods: {\n    async getCurrentCar() {\n      const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n      const argsBase64 = window.btoa(JSON.stringify({id: +this.$route.params.id}))\n      const rawResult = await provider.query({\n        request_type: \"call_function\",\n        finality: \"final\",\n        account_id: window.nearConfig.contractName,\n        method_name: \"get_car_by_id\",\n        args_base64: argsBase64,\n      }).catch(() => {\n        this.$router.push({'name': 'home'});\n      });\n      this.currentCar = JSON.parse(Buffer.from(rawResult.result).toString())\n    },\n\n    async startRentCarProcess(){\n      let loader = this.$loading.show();\n      window.walletConnection.account().functionCall({\n        contractId: window.roketoWrapContractName,\n        methodName: 'near_deposit',\n        args: {},\n        gas:\"200000000000000\",\n        attachedDeposit:Big((this.currentCar.price_per_hour / (10**24)).toFixed(5)).times(10 ** 24).toFixed(),\n      }).then((response)=>{\n        console.log(response)\n      });\n      loader.hide();\n    },\n    async afterNearDeposit(){\n      let loader = this.$loading.show();\n      await ftContract.ft_transfer_call({\n        receiver_id: 'streaming-r-v2.dcversus.testnet',\n        amount: '1000000000000000000000000', // 1 NEAR\n        memo: 'Roketo transfer',\n        msg: JSON.stringify({\n          Create: {\n            request: {\n              \"owner_id\": \"yourname.testnet\",\n              \"receiver_id\": \"dcversus.testnet\",\n              \"tokens_per_sec\": 385802469135802469, // 1 month for 1 NEAR\n            }\n          }\n        }),\n      }, 200000000000000);\n      window.walletConnection.account().functionCall({\n        contractId: window.roketoWrapContractName,\n        methodName: 'ft_transfer_call',\n        args: {\n          receiver_id: window.roketoContractName,\n          amount: Big((this.currentCar.price_per_hour / (10**24)).toFixed(5)).times(10 ** 24).toFixed(),\n          memo: 'Car rent #' + this.currentCar.id,\n          msg: JSON.stringify({\n            Create: {\n              request: {\n                \"owner_id\": window.nearAccount.accountId,\n                \"receiver_id\": this.currentCar.owner_id,\n                \"tokens_per_sec\":Big((this.currentCar.price_per_hour / 60 / 60 / (10**24)).toFixed(5)).times(10 ** 24).toFixed(), // speed for 1 hour\n              }\n            }\n          })\n        },\n        gas:\"200000000000000\",\n        attachedDeposit:1,\n      }).then((response)=>{\n        console.log(response)\n      });\n      loader.hide();\n    },\n    cleanGetParams(){\n      window.history.pushState({}, document.title, process.env.VUE_APP_APP_URL + '#' + this.$route.fullPath);\n    },\n\n    async afterFtTransferCall(){\n      const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n      const argsBase64 = window.btoa(JSON.stringify({\n        account_id:window.nearAccount.accountId,\n        from:1,\n        limit:10\n      }))\n      const rawResult = await provider.query({\n        request_type: \"call_function\",\n        finality: \"final\",\n        account_id: window.roketoContractName,\n        method_name: \"get_account_outgoing_streams\",\n        args_base64: argsBase64,\n      });\n      console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n      try {\n        // let result = await createStream();\n        // console.log(result)\n        // console.log(BOATLOAD_OF_GAS)\n        // await window.walletConnection.account().functionCall({\n        //   contractId: window.nearConfig.contractName,\n        //   methodName: 'rent_car',\n        //   args: {\n        //     car_id: +this.$route.params.id\n        //   },\n        //   gas:BOATLOAD_OF_GAS,\n        //   walletCallbackUrl: window.location.href\n        // }).then(()=>{\n        //   this.$swal.fire({\n        //     icon: 'success',\n        //     title: 'Success',\n        //     text: 'Your Car has been added to renting page!',\n        //     footer: ``,\n        //   });\n        // });\n        this.$swal.fire({\n          icon: 'success',\n          title: 'Success',\n          text: 'Car was rent!',\n          footer: ``,\n        })\n        await this.getCurrentCar();\n      } catch (error) {\n        this.$swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: error.message,\n          footer: ``,\n        })\n        console.log(error)\n      }\n    },\n\n    async continueRentCarProcess() {\n      let params = getUrlParams();\n      let transactionHashes = params.get('transactionHashes');\n      if (transactionHashes !== null){\n        let result = await getTransactionState(transactionHashes);\n        if (\"SuccessValue\" in result.status){\n          const transactionMethodName = result.transaction.actions[0].FunctionCall.method_name;\n          switch (transactionMethodName){\n            case 'near_deposit':\n              await this.afterNearDeposit();\n              this.cleanGetParams();\n              break;\n            case 'ft_transfer_call':\n              await this.afterFtTransferCall();\n              this.cleanGetParams();\n              break;\n          }\n        }\n      }\n    },\n  },\n  async mounted() {\n    let loader = this.$loading.show();\n    await this.getCurrentCar();\n    await this.continueRentCarProcess();\n    loader.hide();\n\n    // const transactionHash = params.get('transactionHashes');\n    // if(transactionHash){\n    //   this.$swal.fire({\n    //     icon: 'success',\n    //     title: 'Success',\n    //     text: 'Ticket was successfully bought!',\n    //     footer: `To look at your ticket go to your wallet collectibles!`,\n    //   })\n    // }\n  },\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}