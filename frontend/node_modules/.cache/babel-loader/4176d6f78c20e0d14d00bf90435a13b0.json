{"ast":null,"code":"import { Contract, providers } from \"near-api-js\";\nimport Big from \"big.js\"; // import * as nearAPI from \"near-api-js\";\n//network config (replace testnet with mainnet or betanet)\n\nasync function getState(txHash, accountId) {\n  const provider = new providers.JsonRpcProvider(\"https://archival-rpc.testnet.near.org\");\n  return await provider.txStatus(txHash, accountId);\n}\n\nasync function createStream() {\n  // // \"J3Wit8ifeNJjEYNr7AEymkkVbo3k5fJVmshKSkd4aHRY\"\n  // const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n  //\n  // const argsBase64 = window.btoa(JSON.stringify({\n  //     token_account_id:window.nearAccount.accountId\n  // }))\n  // const rawResult = await provider.query({\n  //     request_type: \"call_function\",\n  //     finality: \"final\",\n  //     account_id: 'streaming-r-v2.dcversus.testnet',\n  //     method_name: \"get_stream\",\n  //     args_base64: argsBase64,\n  // });\n  // console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n  const TX_HASH = \"E5hDHujqqmfvTPsscTVzCpH6LA9YsPgXfPfC8Q4pXCYz\";\n  let result = await getState(TX_HASH, window.nearAccount.accountId);\n\n  if (\"SuccessValue\" in result.status) {\n    if (result.transaction.actions[0].FunctionCall.method_name === 'near_deposit') {\n      console.log(\"Result: \", result);\n    }\n  }\n\n  window.walletConnection.account().functionCall({\n    contractId: 'wrap.testnet',\n    methodName: 'near_deposit',\n    args: {},\n    gas: \"200000000000000\",\n    attachedDeposit: \"1000000000000000000000000\",\n    walletCallbackUrl: window.location.href + '?near_deposit=1'\n  }).then(() => {\n    this.$swal.fire({\n      icon: 'success',\n      title: 'Success',\n      text: 'Your Car has been added to renting page!',\n      footer: ``\n    });\n    this.title = \"\";\n    this.description = \"\";\n    this.image = \"\";\n    this.price_per_hour = \"\";\n  }); // await ftContract.ft_transfer_call({\n  //     receiver_id: 'streaming-r-v2.dcversus.testnet',\n  //     amount: '1000000000000000000000000', // 1 NEAR\n  //     memo: 'Roketo transfer',\n  //     msg: JSON.stringify({\n  //         Create: {\n  //             request: {\n  //                 \"owner_id\": window.nearAccount.accountId,\n  //                 \"receiver_id\": \"rocketotest2.testnet\",\n  //                 \"tokens_per_sec\": 385802469135802469, // 1 month for 1 NEAR\n  //             }\n  //         }\n  //     }),\n  // }, 200000000000000,1);\n} // async function init() {\n//\n//     console.log(ftContract)\n//     // \"J3Wit8ifeNJjEYNr7AEymkkVbo3k5fJVmshKSkd4aHRY\"\n//     const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n//\n//     const argsBase64 = window.btoa(JSON.stringify({\n//         stream_id:\"J3Wit8ifeNJjEYNr7AEymkkVbo3k5fJVmshKSkd4aHRY\"\n//     }))\n//     const rawResult = await provider.query({\n//         request_type: \"call_function\",\n//         finality: \"final\",\n//         account_id: 'streaming-r-v2.dcversus.testnet',\n//         method_name: \"get_stream\",\n//         args_base64: argsBase64,\n//     });\n//     console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n//\n//\n//\n//\n//\n//\n//\n//\n//     // const argsBase64 = window.btoa(JSON.stringify({\n//     //     account_id:window.nearAccount.accountId,\n//     //     from:1,\n//     //     limit:10\n//     // }))\n//     // const rawResult = await provider.query({\n//     //     request_type: \"call_function\",\n//     //     finality: \"final\",\n//     //     account_id: 'streaming-r-v2.dcversus.testnet',\n//     //     method_name: \"get_account_outgoing_streams\",\n//     //     args_base64: argsBase64,\n//     // });\n//     // console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n//\n// }\n\n\nexport { createStream };","map":{"version":3,"names":["Contract","providers","Big","getState","txHash","accountId","provider","JsonRpcProvider","txStatus","createStream","TX_HASH","result","window","nearAccount","status","transaction","actions","FunctionCall","method_name","console","log","walletConnection","account","functionCall","contractId","methodName","args","gas","attachedDeposit","walletCallbackUrl","location","href","then","$swal","fire","icon","title","text","footer","description","image","price_per_hour"],"sources":["/var/www/ch-8-car-renting/frontend/src/roketoNearJsService.js"],"sourcesContent":["import {Contract, providers} from \"near-api-js\";\nimport Big from \"big.js\";\n// import * as nearAPI from \"near-api-js\";\n//network config (replace testnet with mainnet or betanet)\nasync function getState(txHash, accountId) {\n    const provider = new providers.JsonRpcProvider(\n        \"https://archival-rpc.testnet.near.org\"\n    );\n    return await provider.txStatus(txHash, accountId);\n}\n\nasync function createStream(){\n\n    // // \"J3Wit8ifeNJjEYNr7AEymkkVbo3k5fJVmshKSkd4aHRY\"\n    // const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n    //\n    // const argsBase64 = window.btoa(JSON.stringify({\n    //     token_account_id:window.nearAccount.accountId\n    // }))\n    // const rawResult = await provider.query({\n    //     request_type: \"call_function\",\n    //     finality: \"final\",\n    //     account_id: 'streaming-r-v2.dcversus.testnet',\n    //     method_name: \"get_stream\",\n    //     args_base64: argsBase64,\n    // });\n    // console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n    const TX_HASH = \"E5hDHujqqmfvTPsscTVzCpH6LA9YsPgXfPfC8Q4pXCYz\";\n\n    let result = await getState(TX_HASH, window.nearAccount.accountId);\n    if (\"SuccessValue\" in result.status){\n        if (result.transaction.actions[0].FunctionCall.method_name === 'near_deposit'){\n            console.log(\"Result: \", result);\n        }\n    }\n    window.walletConnection.account().functionCall({\n        contractId: 'wrap.testnet',\n        methodName: 'near_deposit',\n        args: {},\n        gas:\"200000000000000\",\n        attachedDeposit:\"1000000000000000000000000\",\n        walletCallbackUrl: window.location.href + '?near_deposit=1'\n    }).then(()=>{\n        this.$swal.fire({\n            icon: 'success',\n            title: 'Success',\n            text: 'Your Car has been added to renting page!',\n            footer: ``,\n        });\n        this.title = \"\";\n        this.description = \"\";\n        this.image = \"\";\n        this.price_per_hour = \"\";\n    });\n    // await ftContract.ft_transfer_call({\n    //     receiver_id: 'streaming-r-v2.dcversus.testnet',\n    //     amount: '1000000000000000000000000', // 1 NEAR\n    //     memo: 'Roketo transfer',\n    //     msg: JSON.stringify({\n    //         Create: {\n    //             request: {\n    //                 \"owner_id\": window.nearAccount.accountId,\n    //                 \"receiver_id\": \"rocketotest2.testnet\",\n    //                 \"tokens_per_sec\": 385802469135802469, // 1 month for 1 NEAR\n    //             }\n    //         }\n    //     }),\n    // }, 200000000000000,1);\n\n}\n// async function init() {\n//\n//     console.log(ftContract)\n//     // \"J3Wit8ifeNJjEYNr7AEymkkVbo3k5fJVmshKSkd4aHRY\"\n//     const provider = new nearAPI.providers.JsonRpcProvider(window.nearConfig.nodeUrl);\n//\n//     const argsBase64 = window.btoa(JSON.stringify({\n//         stream_id:\"J3Wit8ifeNJjEYNr7AEymkkVbo3k5fJVmshKSkd4aHRY\"\n//     }))\n//     const rawResult = await provider.query({\n//         request_type: \"call_function\",\n//         finality: \"final\",\n//         account_id: 'streaming-r-v2.dcversus.testnet',\n//         method_name: \"get_stream\",\n//         args_base64: argsBase64,\n//     });\n//     console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n//\n//\n//\n//\n//\n//\n//\n//\n//     // const argsBase64 = window.btoa(JSON.stringify({\n//     //     account_id:window.nearAccount.accountId,\n//     //     from:1,\n//     //     limit:10\n//     // }))\n//     // const rawResult = await provider.query({\n//     //     request_type: \"call_function\",\n//     //     finality: \"final\",\n//     //     account_id: 'streaming-r-v2.dcversus.testnet',\n//     //     method_name: \"get_account_outgoing_streams\",\n//     //     args_base64: argsBase64,\n//     // });\n//     // console.log(JSON.parse(Buffer.from(rawResult.result).toString()))\n//\n// }\n\nexport {createStream}"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,aAAlC;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CACA;AACA;;AACA,eAAeC,QAAf,CAAwBC,MAAxB,EAAgCC,SAAhC,EAA2C;EACvC,MAAMC,QAAQ,GAAG,IAAIL,SAAS,CAACM,eAAd,CACb,uCADa,CAAjB;EAGA,OAAO,MAAMD,QAAQ,CAACE,QAAT,CAAkBJ,MAAlB,EAA0BC,SAA1B,CAAb;AACH;;AAED,eAAeI,YAAf,GAA6B;EAEzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,OAAO,GAAG,8CAAhB;EAEA,IAAIC,MAAM,GAAG,MAAMR,QAAQ,CAACO,OAAD,EAAUE,MAAM,CAACC,WAAP,CAAmBR,SAA7B,CAA3B;;EACA,IAAI,kBAAkBM,MAAM,CAACG,MAA7B,EAAoC;IAChC,IAAIH,MAAM,CAACI,WAAP,CAAmBC,OAAnB,CAA2B,CAA3B,EAA8BC,YAA9B,CAA2CC,WAA3C,KAA2D,cAA/D,EAA8E;MAC1EC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBT,MAAxB;IACH;EACJ;;EACDC,MAAM,CAACS,gBAAP,CAAwBC,OAAxB,GAAkCC,YAAlC,CAA+C;IAC3CC,UAAU,EAAE,cAD+B;IAE3CC,UAAU,EAAE,cAF+B;IAG3CC,IAAI,EAAE,EAHqC;IAI3CC,GAAG,EAAC,iBAJuC;IAK3CC,eAAe,EAAC,2BAL2B;IAM3CC,iBAAiB,EAAEjB,MAAM,CAACkB,QAAP,CAAgBC,IAAhB,GAAuB;EANC,CAA/C,EAOGC,IAPH,CAOQ,MAAI;IACR,KAAKC,KAAL,CAAWC,IAAX,CAAgB;MACZC,IAAI,EAAE,SADM;MAEZC,KAAK,EAAE,SAFK;MAGZC,IAAI,EAAE,0CAHM;MAIZC,MAAM,EAAG;IAJG,CAAhB;IAMA,KAAKF,KAAL,GAAa,EAAb;IACA,KAAKG,WAAL,GAAmB,EAAnB;IACA,KAAKC,KAAL,GAAa,EAAb;IACA,KAAKC,cAAL,GAAsB,EAAtB;EACH,CAlBD,EAxByB,CA2CzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAEH,C,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAAQhC,YAAR"},"metadata":{},"sourceType":"module"}