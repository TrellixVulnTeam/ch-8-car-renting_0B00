{"ast":null,"code":"import { BaseBlockstore } from './base.js';\nimport { base32 } from 'multiformats/bases/base32';\nimport * as raw from 'multiformats/codecs/raw';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport * as Errors from './errors.js';\nexport class MemoryBlockstore extends BaseBlockstore {\n  constructor() {\n    super();\n    this.data = {};\n  }\n\n  open() {\n    return Promise.resolve();\n  }\n\n  close() {\n    return Promise.resolve();\n  }\n\n  async put(key, val) {\n    this.data[base32.encode(key.multihash.bytes)] = val;\n  }\n\n  async get(key) {\n    const exists = await this.has(key);\n    if (!exists) throw Errors.notFoundError();\n    return this.data[base32.encode(key.multihash.bytes)];\n  }\n\n  async has(key) {\n    return this.data[base32.encode(key.multihash.bytes)] !== undefined;\n  }\n\n  async delete(key) {\n    delete this.data[base32.encode(key.multihash.bytes)];\n  }\n\n  async *_all() {\n    yield* Object.entries(this.data).map(([key, value]) => ({\n      key: CID.createV1(raw.code, Digest.decode(base32.decode(key))),\n      value\n    }));\n  }\n\n  async *_allKeys() {\n    yield* Object.entries(this.data).map(([key]) => CID.createV1(raw.code, Digest.decode(base32.decode(key))));\n  }\n\n}","map":{"version":3,"names":["BaseBlockstore","base32","raw","CID","Digest","Errors","MemoryBlockstore","constructor","data","open","Promise","resolve","close","put","key","val","encode","multihash","bytes","get","exists","has","notFoundError","undefined","delete","_all","Object","entries","map","value","createV1","code","decode","_allKeys"],"sources":["/var/www/ch-8-car-renting/frontend/node_modules/blockstore-core/esm/src/memory.js"],"sourcesContent":["import { BaseBlockstore } from './base.js';\nimport { base32 } from 'multiformats/bases/base32';\nimport * as raw from 'multiformats/codecs/raw';\nimport { CID } from 'multiformats/cid';\nimport * as Digest from 'multiformats/hashes/digest';\nimport * as Errors from './errors.js';\nexport class MemoryBlockstore extends BaseBlockstore {\n  constructor() {\n    super();\n    this.data = {};\n  }\n  open() {\n    return Promise.resolve();\n  }\n  close() {\n    return Promise.resolve();\n  }\n  async put(key, val) {\n    this.data[base32.encode(key.multihash.bytes)] = val;\n  }\n  async get(key) {\n    const exists = await this.has(key);\n    if (!exists)\n      throw Errors.notFoundError();\n    return this.data[base32.encode(key.multihash.bytes)];\n  }\n  async has(key) {\n    return this.data[base32.encode(key.multihash.bytes)] !== undefined;\n  }\n  async delete(key) {\n    delete this.data[base32.encode(key.multihash.bytes)];\n  }\n  async *_all() {\n    yield* Object.entries(this.data).map(([key, value]) => ({\n      key: CID.createV1(raw.code, Digest.decode(base32.decode(key))),\n      value\n    }));\n  }\n  async *_allKeys() {\n    yield* Object.entries(this.data).map(([key]) => CID.createV1(raw.code, Digest.decode(base32.decode(key))));\n  }\n}"],"mappings":"AAAA,SAASA,cAAT,QAA+B,WAA/B;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,yBAArB;AACA,SAASC,GAAT,QAAoB,kBAApB;AACA,OAAO,KAAKC,MAAZ,MAAwB,4BAAxB;AACA,OAAO,KAAKC,MAAZ,MAAwB,aAAxB;AACA,OAAO,MAAMC,gBAAN,SAA+BN,cAA/B,CAA8C;EACnDO,WAAW,GAAG;IACZ;IACA,KAAKC,IAAL,GAAY,EAAZ;EACD;;EACDC,IAAI,GAAG;IACL,OAAOC,OAAO,CAACC,OAAR,EAAP;EACD;;EACDC,KAAK,GAAG;IACN,OAAOF,OAAO,CAACC,OAAR,EAAP;EACD;;EACQ,MAAHE,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAW;IAClB,KAAKP,IAAL,CAAUP,MAAM,CAACe,MAAP,CAAcF,GAAG,CAACG,SAAJ,CAAcC,KAA5B,CAAV,IAAgDH,GAAhD;EACD;;EACQ,MAAHI,GAAG,CAACL,GAAD,EAAM;IACb,MAAMM,MAAM,GAAG,MAAM,KAAKC,GAAL,CAASP,GAAT,CAArB;IACA,IAAI,CAACM,MAAL,EACE,MAAMf,MAAM,CAACiB,aAAP,EAAN;IACF,OAAO,KAAKd,IAAL,CAAUP,MAAM,CAACe,MAAP,CAAcF,GAAG,CAACG,SAAJ,CAAcC,KAA5B,CAAV,CAAP;EACD;;EACQ,MAAHG,GAAG,CAACP,GAAD,EAAM;IACb,OAAO,KAAKN,IAAL,CAAUP,MAAM,CAACe,MAAP,CAAcF,GAAG,CAACG,SAAJ,CAAcC,KAA5B,CAAV,MAAkDK,SAAzD;EACD;;EACW,MAANC,MAAM,CAACV,GAAD,EAAM;IAChB,OAAO,KAAKN,IAAL,CAAUP,MAAM,CAACe,MAAP,CAAcF,GAAG,CAACG,SAAJ,CAAcC,KAA5B,CAAV,CAAP;EACD;;EACU,OAAJO,IAAI,GAAG;IACZ,OAAOC,MAAM,CAACC,OAAP,CAAe,KAAKnB,IAApB,EAA0BoB,GAA1B,CAA8B,CAAC,CAACd,GAAD,EAAMe,KAAN,CAAD,MAAmB;MACtDf,GAAG,EAAEX,GAAG,CAAC2B,QAAJ,CAAa5B,GAAG,CAAC6B,IAAjB,EAAuB3B,MAAM,CAAC4B,MAAP,CAAc/B,MAAM,CAAC+B,MAAP,CAAclB,GAAd,CAAd,CAAvB,CADiD;MAEtDe;IAFsD,CAAnB,CAA9B,CAAP;EAID;;EACc,OAARI,QAAQ,GAAG;IAChB,OAAOP,MAAM,CAACC,OAAP,CAAe,KAAKnB,IAApB,EAA0BoB,GAA1B,CAA8B,CAAC,CAACd,GAAD,CAAD,KAAWX,GAAG,CAAC2B,QAAJ,CAAa5B,GAAG,CAAC6B,IAAjB,EAAuB3B,MAAM,CAAC4B,MAAP,CAAc/B,MAAM,CAAC+B,MAAP,CAAclB,GAAd,CAAd,CAAvB,CAAzC,CAAP;EACD;;AAlCkD"},"metadata":{},"sourceType":"module"}