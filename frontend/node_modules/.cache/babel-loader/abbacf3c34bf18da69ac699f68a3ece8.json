{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { __awaiter } from \"tslib\";\nimport isMobile from \"is-mobile\";\nimport { waitFor } from \"@near-wallet-selector/core\";\nconst INJECTED_WALLET_LOADING_MS = 300;\nexport function setupSender({\n  iconUrl\n} = {}) {\n  return function Sender({\n    options,\n    network,\n    emitter,\n    logger,\n    updateState\n  }) {\n    let wallet;\n\n    const getAccounts = () => {\n      const accountId = wallet.getAccountId();\n\n      if (!accountId) {\n        return [];\n      }\n\n      return [{\n        accountId\n      }];\n    };\n\n    const isInstalled = () => __awaiter(this, void 0, void 0, function* () {\n      try {\n        return yield waitFor(() => {\n          var _a;\n\n          return !!((_a = window.near) === null || _a === void 0 ? void 0 : _a.isSender);\n        }, {});\n      } catch (e) {\n        logger.log(\"Sender:isInstalled:error\", e);\n        return false;\n      }\n    });\n\n    const isValidActions = actions => {\n      return actions.every(x => x.type === \"FunctionCall\");\n    };\n\n    const transformActions = actions => {\n      const validActions = isValidActions(actions);\n\n      if (!validActions) {\n        throw new Error(\"Only 'FunctionCall' actions types are supported by Sender\");\n      }\n\n      return actions.map(x => x.params);\n    };\n\n    const transformTransactions = transactions => {\n      return transactions.map(transaction => {\n        return {\n          receiverId: transaction.receiverId,\n          actions: transformActions(transaction.actions)\n        };\n      });\n    };\n\n    return {\n      id: \"sender\",\n      type: \"injected\",\n      name: \"Sender\",\n      description: null,\n      iconUrl: iconUrl || \"./assets/sender-icon.png\",\n      downloadUrl: \"https://chrome.google.com/webstore/detail/sender-wallet/epapihdplajcdnnkdeiahlgigofloibg\",\n\n      isAvailable() {\n        if (!isInstalled()) {\n          return false;\n        }\n\n        if (isMobile()) {\n          return false;\n        }\n\n        return true;\n      },\n\n      init() {\n        return __awaiter(this, void 0, void 0, function* () {\n          if (!(yield isInstalled())) {\n            throw new Error(\"Wallet not installed\");\n          } // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n\n          wallet = window.near;\n\n          try {\n            // Add extra wait to ensure Sender signin status be read from browser extension background env\n            yield waitFor(() => wallet === null || wallet === void 0 ? void 0 : wallet.isSignedIn(), {\n              timeout: INJECTED_WALLET_LOADING_MS\n            });\n          } catch (e) {\n            logger.log(\"Sender:init: haven't signed in yet\", e);\n          }\n\n          wallet.on(\"accountChanged\", newAccountId => __awaiter(this, void 0, void 0, function* () {\n            logger.log(\"Sender:onAccountChange\", newAccountId);\n\n            try {\n              yield this.signOut();\n              yield this.signIn();\n            } catch (e) {\n              logger.log(`Failed to change account ${e.message}`);\n            }\n          }));\n          wallet.on(\"rpcChanged\", response => {\n            if (network.networkId !== response.rpc.networkId) {\n              updateState(prevState => Object.assign(Object.assign({}, prevState), {\n                showModal: true,\n                showWalletOptions: false,\n                showSwitchNetwork: true\n              }));\n            }\n          });\n        });\n      },\n\n      signIn() {\n        return __awaiter(this, void 0, void 0, function* () {\n          if (!(yield isInstalled())) {\n            return updateState(prevState => Object.assign(Object.assign({}, prevState), {\n              showWalletOptions: false,\n              showWalletNotInstalled: this.id\n            }));\n          }\n\n          if (!wallet) {\n            yield this.init();\n          }\n\n          const {\n            accessKey,\n            error\n          } = yield wallet.requestSignIn({\n            contractId: options.contractId,\n            methodNames: options.methodNames\n          });\n\n          if (!accessKey || error) {\n            throw new Error((typeof error === \"string\" ? error : error.type) || \"Failed to sign in\");\n          }\n\n          updateState(prevState => Object.assign(Object.assign({}, prevState), {\n            showModal: false,\n            selectedWalletId: this.id\n          }));\n          const accounts = getAccounts();\n          emitter.emit(\"signIn\", {\n            accounts\n          });\n          emitter.emit(\"accountsChanged\", {\n            accounts\n          });\n        });\n      },\n\n      isSignedIn() {\n        return __awaiter(this, void 0, void 0, function* () {\n          return wallet.isSignedIn();\n        });\n      },\n\n      signOut() {\n        return __awaiter(this, void 0, void 0, function* () {\n          const res = yield wallet.signOut();\n\n          if (typeof res !== \"boolean\" && res.error) {\n            throw new Error((typeof res.error === \"string\" ? res.error : res.error.type) || \"Failed to connect\");\n          }\n\n          updateState(prevState => Object.assign(Object.assign({}, prevState), {\n            selectedWalletId: null\n          }));\n          const accounts = getAccounts();\n          emitter.emit(\"accountsChanged\", {\n            accounts\n          });\n          emitter.emit(\"signOut\", {\n            accounts\n          });\n        });\n      },\n\n      getAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n          return getAccounts();\n        });\n      },\n\n      signAndSendTransaction({\n        signerId,\n        receiverId,\n        actions\n      }) {\n        return __awaiter(this, void 0, void 0, function* () {\n          logger.log(\"Sender:signAndSendTransaction\", {\n            signerId,\n            receiverId,\n            actions\n          });\n          return wallet.signAndSendTransaction({\n            receiverId,\n            actions: transformActions(actions)\n          }).then(res => {\n            var _a;\n\n            if (res.error) {\n              throw new Error(res.error);\n            } // Shouldn't happen but avoids inconsistent responses.\n\n\n            if (!((_a = res.response) === null || _a === void 0 ? void 0 : _a.length)) {\n              throw new Error(\"Invalid response\");\n            }\n\n            return res.response[0];\n          });\n        });\n      },\n\n      signAndSendTransactions({\n        transactions\n      }) {\n        return __awaiter(this, void 0, void 0, function* () {\n          logger.log(\"Sender:signAndSendTransactions\", {\n            transactions\n          });\n          return wallet.requestSignTransactions({\n            transactions: transformTransactions(transactions)\n          }).then(res => {\n            var _a;\n\n            if (res.error) {\n              throw new Error(res.error);\n            } // Shouldn't happen but avoids inconsistent responses.\n\n\n            if (!((_a = res.response) === null || _a === void 0 ? void 0 : _a.length)) {\n              throw new Error(\"Invalid response\");\n            }\n\n            return res.response;\n          });\n        });\n      }\n\n    };\n  };\n}","map":{"version":3,"mappings":";;AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,SAMEC,OANF,QAOO,4BAPP;AAWA,MAAMC,0BAA0B,GAAG,GAAnC;AAYA,OAAM,SAAUC,WAAV,CAAsB;EAC1BC;AAD0B,IAEV,EAFZ,EAEc;EAClB,OAAO,SAASC,MAAT,CAAgB;IAAEC,OAAF;IAAWC,OAAX;IAAoBC,OAApB;IAA6BC,MAA7B;IAAqCC;EAArC,CAAhB,EAAkE;IACvE,IAAIC,MAAJ;;IAEA,MAAMC,WAAW,GAAG,MAAK;MACvB,MAAMC,SAAS,GAAGF,MAAM,CAACG,YAAP,EAAlB;;MAEA,IAAI,CAACD,SAAL,EAAgB;QACd,OAAO,EAAP;MACD;;MAED,OAAO,CAAC;QAAEA;MAAF,CAAD,CAAP;IACD,CARD;;IAUA,MAAME,WAAW,GAAG,MAAWC;MAC7B,IAAI;QACF,OAAO,MAAMf,OAAO,CAAC,MAAK;UAAA;;UAAC,QAAC,EAAC,YAAM,CAACgB,IAAP,MAAW,IAAX,IAAWC,aAAX,GAAW,MAAX,GAAWA,GAAEC,QAAd,CAAD;QAAuB,CAA9B,EAAgC,EAAhC,CAApB;MACD,CAFD,CAEE,OAAOC,CAAP,EAAU;QACVX,MAAM,CAACY,GAAP,CAAW,0BAAX,EAAuCD,CAAvC;QAEA,OAAO,KAAP;MACD;IACF,CAR8B,CAA/B;;IAUA,MAAME,cAAc,GAClBC,OADqB,IAEmB;MACxC,OAAOA,OAAO,CAACC,KAAR,CAAeC,CAAD,IAAOA,CAAC,CAACC,IAAF,KAAW,cAAhC,CAAP;IACD,CAJD;;IAMA,MAAMC,gBAAgB,GAAIJ,OAAD,IAA2B;MAClD,MAAMK,YAAY,GAAGN,cAAc,CAACC,OAAD,CAAnC;;MAEA,IAAI,CAACK,YAAL,EAAmB;QACjB,MAAM,IAAIC,KAAJ,CACJ,2DADI,CAAN;MAGD;;MAED,OAAON,OAAO,CAACO,GAAR,CAAaL,CAAD,IAAOA,CAAC,CAACM,MAArB,CAAP;IACD,CAVD;;IAYA,MAAMC,qBAAqB,GAAIC,YAAD,IAAqC;MACjE,OAAOA,YAAY,CAACH,GAAb,CAAkBI,WAAD,IAAgB;QACtC,OAAO;UACLC,UAAU,EAAED,WAAW,CAACC,UADnB;UAELZ,OAAO,EAAEI,gBAAgB,CAACO,WAAW,CAACX,OAAb;QAFpB,CAAP;MAID,CALM,CAAP;IAMD,CAPD;;IASA,OAAO;MACLa,EAAE,EAAE,QADC;MAELV,IAAI,EAAE,UAFD;MAGLW,IAAI,EAAE,QAHD;MAILC,WAAW,EAAE,IAJR;MAKLlC,OAAO,EAAEA,OAAO,IAAI,0BALf;MAMLmC,WAAW,EACT,0FAPG;;MASLC,WAAW;QACT,IAAI,CAACzB,WAAW,EAAhB,EAAoB;UAClB,OAAO,KAAP;QACD;;QAED,IAAIf,QAAQ,EAAZ,EAAgB;UACd,OAAO,KAAP;QACD;;QAED,OAAO,IAAP;MACD,CAnBI;;MAqBCyC,IAAI;;UACR,IAAI,EAAE,MAAM1B,WAAW,EAAnB,CAAJ,EAA4B;YAC1B,MAAM,IAAIc,KAAJ,CAAU,sBAAV,CAAN;UACD,EAED;;;UACAlB,MAAM,GAAG+B,MAAM,CAACzB,IAAhB;;UAEA,IAAI;YACF;YACA,MAAMhB,OAAO,CAAC,MAAMU,MAAM,SAAN,UAAM,WAAN,GAAM,MAAN,SAAM,CAAEgC,UAAR,EAAP,EAA6B;cACxCC,OAAO,EAAE1C;YAD+B,CAA7B,CAAb;UAGD,CALD,CAKE,OAAOkB,CAAP,EAAU;YACVX,MAAM,CAACY,GAAP,CAAW,oCAAX,EAAiDD,CAAjD;UACD;;UAEDT,MAAM,CAACkC,EAAP,CAAU,gBAAV,EAAmCC,YAAP,IAAuB9B;YACjDP,MAAM,CAACY,GAAP,CAAW,wBAAX,EAAqCyB,YAArC;;YAEA,IAAI;cACF,MAAM,KAAKC,OAAL,EAAN;cACA,MAAM,KAAKC,MAAL,EAAN;YACD,CAHD,CAGE,OAAO5B,CAAP,EAAU;cACVX,MAAM,CAACY,GAAP,CACE,4BAA6BD,CAAsB,CAAC6B,OAAO,EAD7D;YAGD;UACF,CAXkD,CAAnD;UAaAtC,MAAM,CAACkC,EAAP,CAAU,YAAV,EAAyBK,QAAD,IAAa;YACnC,IAAI3C,OAAO,CAAC4C,SAAR,KAAsBD,QAAQ,CAACE,GAAT,CAAaD,SAAvC,EAAkD;cAChDzC,WAAW,CAAE2C,SAAD,IAAeC,gCACtBD,SADsB,GACb;gBACZE,SAAS,EAAE,IADC;gBAEZC,iBAAiB,EAAE,KAFP;gBAGZC,iBAAiB,EAAE;cAHP,CADa,CAAhB,CAAX;YAMD;UACF,CATD;QAUD;MAAA,CA7DI;;MA+DCT,MAAM;;UACV,IAAI,EAAE,MAAMjC,WAAW,EAAnB,CAAJ,EAA4B;YAC1B,OAAOL,WAAW,CAAE2C,SAAD,IAAeC,gCAC7BD,SAD6B,GACpB;cACZG,iBAAiB,EAAE,KADP;cAEZE,sBAAsB,EAAE,KAAKtB;YAFjB,CADoB,CAAhB,CAAlB;UAKD;;UAED,IAAI,CAACzB,MAAL,EAAa;YACX,MAAM,KAAK8B,IAAL,EAAN;UACD;;UAED,MAAM;YAAEkB,SAAF;YAAaC;UAAb,IAAuB,MAAMjD,MAAM,CAACkD,aAAP,CAAqB;YACtDC,UAAU,EAAExD,OAAO,CAACwD,UADkC;YAEtDC,WAAW,EAAEzD,OAAO,CAACyD;UAFiC,CAArB,CAAnC;;UAKA,IAAI,CAACJ,SAAD,IAAcC,KAAlB,EAAyB;YACvB,MAAM,IAAI/B,KAAJ,CACJ,CAAC,OAAO+B,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCA,KAAK,CAAClC,IAA3C,KACE,mBAFE,CAAN;UAID;;UAEDhB,WAAW,CAAE2C,SAAD,IAAeC,gCACtBD,SADsB,GACb;YACZE,SAAS,EAAE,KADC;YAEZS,gBAAgB,EAAE,KAAK5B;UAFX,CADa,CAAhB,CAAX;UAMA,MAAM6B,QAAQ,GAAGrD,WAAW,EAA5B;UACAJ,OAAO,CAAC0D,IAAR,CAAa,QAAb,EAAuB;YAAED;UAAF,CAAvB;UACAzD,OAAO,CAAC0D,IAAR,CAAa,iBAAb,EAAgC;YAAED;UAAF,CAAhC;QACD;MAAA,CAjGI;;MAmGCtB,UAAU;;UACd,OAAOhC,MAAM,CAACgC,UAAP,EAAP;QACD;MAAA,CArGI;;MAuGCI,OAAO;;UACX,MAAMoB,GAAG,GAAG,MAAMxD,MAAM,CAACoC,OAAP,EAAlB;;UAEA,IAAI,OAAOoB,GAAP,KAAe,SAAf,IAA4BA,GAAG,CAACP,KAApC,EAA2C;YACzC,MAAM,IAAI/B,KAAJ,CACJ,CAAC,OAAOsC,GAAG,CAACP,KAAX,KAAqB,QAArB,GAAgCO,GAAG,CAACP,KAApC,GAA4CO,GAAG,CAACP,KAAJ,CAAUlC,IAAvD,KACE,mBAFE,CAAN;UAID;;UAEDhB,WAAW,CAAE2C,SAAD,IAAeC,gCACtBD,SADsB,GACb;YACZW,gBAAgB,EAAE;UADN,CADa,CAAhB,CAAX;UAKA,MAAMC,QAAQ,GAAGrD,WAAW,EAA5B;UACAJ,OAAO,CAAC0D,IAAR,CAAa,iBAAb,EAAgC;YAAED;UAAF,CAAhC;UACAzD,OAAO,CAAC0D,IAAR,CAAa,SAAb,EAAwB;YAAED;UAAF,CAAxB;QACD;MAAA,CAzHI;;MA2HCrD,WAAW;;UACf,OAAOA,WAAW,EAAlB;QACD;MAAA,CA7HI;;MA+HCwD,sBAAsB,CAAC;QAAEC,QAAF;QAAYlC,UAAZ;QAAwBZ;MAAxB,CAAD,EAAkC;;UAC5Dd,MAAM,CAACY,GAAP,CAAW,+BAAX,EAA4C;YAC1CgD,QAD0C;YAE1ClC,UAF0C;YAG1CZ;UAH0C,CAA5C;UAMA,OAAOZ,MAAM,CACVyD,sBADI,CACmB;YACtBjC,UADsB;YAEtBZ,OAAO,EAAEI,gBAAgB,CAACJ,OAAD;UAFH,CADnB,EAKJ+C,IALI,CAKEH,GAAD,IAAQ;;;YACZ,IAAIA,GAAG,CAACP,KAAR,EAAe;cACb,MAAM,IAAI/B,KAAJ,CAAUsC,GAAG,CAACP,KAAd,CAAN;YACD,CAHW,CAKZ;;;YACA,IAAI,EAAC,SAAG,CAACV,QAAJ,MAAY,IAAZ,IAAYhC,aAAZ,GAAY,MAAZ,GAAYA,GAAEqD,MAAf,CAAJ,EAA2B;cACzB,MAAM,IAAI1C,KAAJ,CAAU,kBAAV,CAAN;YACD;;YAED,OAAOsC,GAAG,CAACjB,QAAJ,CAAa,CAAb,CAAP;UACD,CAhBI,CAAP;QAiBD;MAAA,CAvJI;;MAyJCsB,uBAAuB,CAAC;QAAEvC;MAAF,CAAD,EAAiB;;UAC5CxB,MAAM,CAACY,GAAP,CAAW,gCAAX,EAA6C;YAAEY;UAAF,CAA7C;UAEA,OAAOtB,MAAM,CACV8D,uBADI,CACoB;YACvBxC,YAAY,EAAED,qBAAqB,CAACC,YAAD;UADZ,CADpB,EAIJqC,IAJI,CAIEH,GAAD,IAAQ;;;YACZ,IAAIA,GAAG,CAACP,KAAR,EAAe;cACb,MAAM,IAAI/B,KAAJ,CAAUsC,GAAG,CAACP,KAAd,CAAN;YACD,CAHW,CAKZ;;;YACA,IAAI,EAAC,SAAG,CAACV,QAAJ,MAAY,IAAZ,IAAYhC,aAAZ,GAAY,MAAZ,GAAYA,GAAEqD,MAAf,CAAJ,EAA2B;cACzB,MAAM,IAAI1C,KAAJ,CAAU,kBAAV,CAAN;YACD;;YAED,OAAOsC,GAAG,CAACjB,QAAX;UACD,CAfI,CAAP;QAgBD;MAAA;;IA5KI,CAAP;EA8KD,CAhOD;AAiOD","names":["isMobile","waitFor","INJECTED_WALLET_LOADING_MS","setupSender","iconUrl","Sender","options","network","emitter","logger","updateState","wallet","getAccounts","accountId","getAccountId","isInstalled","__awaiter","near","_a","isSender","e","log","isValidActions","actions","every","x","type","transformActions","validActions","Error","map","params","transformTransactions","transactions","transaction","receiverId","id","name","description","downloadUrl","isAvailable","init","window","isSignedIn","timeout","on","newAccountId","signOut","signIn","message","response","networkId","rpc","prevState","Object","showModal","showWalletOptions","showSwitchNetwork","showWalletNotInstalled","accessKey","error","requestSignIn","contractId","methodNames","selectedWalletId","accounts","emit","res","signAndSendTransaction","signerId","then","length","signAndSendTransactions","requestSignTransactions"],"sourceRoot":"","sources":["../../../../../packages/sender/src/lib/sender.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}