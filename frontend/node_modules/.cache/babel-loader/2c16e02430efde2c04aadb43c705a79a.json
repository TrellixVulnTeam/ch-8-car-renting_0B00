{"ast":null,"code":"import batch from 'it-batch';\n\nfunction balanced(source, reduce, options) {\n  return reduceToParents(source, reduce, options);\n}\n\nasync function reduceToParents(source, reduce, options) {\n  const roots = [];\n\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked));\n  }\n\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options);\n  }\n\n  return roots[0];\n}\n\nexport default balanced;","map":{"version":3,"names":["batch","balanced","source","reduce","options","reduceToParents","roots","chunked","maxChildrenPerNode","push","length"],"sources":["/var/www/ch-8-car-renting/frontend/node_modules/ipfs-unixfs-importer/esm/src/dag-builder/file/balanced.js"],"sourcesContent":["import batch from 'it-batch';\nfunction balanced(source, reduce, options) {\n  return reduceToParents(source, reduce, options);\n}\nasync function reduceToParents(source, reduce, options) {\n  const roots = [];\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked));\n  }\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options);\n  }\n  return roots[0];\n}\nexport default balanced;"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;;AACA,SAASC,QAAT,CAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA2C;EACzC,OAAOC,eAAe,CAACH,MAAD,EAASC,MAAT,EAAiBC,OAAjB,CAAtB;AACD;;AACD,eAAeC,eAAf,CAA+BH,MAA/B,EAAuCC,MAAvC,EAA+CC,OAA/C,EAAwD;EACtD,MAAME,KAAK,GAAG,EAAd;;EACA,WAAW,MAAMC,OAAjB,IAA4BP,KAAK,CAACE,MAAD,EAASE,OAAO,CAACI,kBAAjB,CAAjC,EAAuE;IACrEF,KAAK,CAACG,IAAN,CAAW,MAAMN,MAAM,CAACI,OAAD,CAAvB;EACD;;EACD,IAAID,KAAK,CAACI,MAAN,GAAe,CAAnB,EAAsB;IACpB,OAAOL,eAAe,CAACC,KAAD,EAAQH,MAAR,EAAgBC,OAAhB,CAAtB;EACD;;EACD,OAAOE,KAAK,CAAC,CAAD,CAAZ;AACD;;AACD,eAAeL,QAAf"},"metadata":{},"sourceType":"module"}