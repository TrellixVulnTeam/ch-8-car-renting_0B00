{"ast":null,"code":"import Big from \"big.js\";\nimport { NFTStorage } from 'nft.storage';\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 13).toFixed();\nexport default {\n  name: \"CreateCarComponent\",\n\n  data() {\n    return {\n      title: \"\",\n      description: \"\",\n      image: \"\",\n      price_per_hour: \"\"\n    };\n  },\n\n  methods: {\n    async createCar() {\n      let loader = this.$loading.show();\n      await window.walletConnection.account().functionCall({\n        contractId: window.nearConfig.contractName,\n        methodName: 'add_new_car',\n        args: {\n          title: this.title,\n          description: this.description,\n          image: this.image,\n          price_per_hour: Big(this.price_per_hour).times(10 ** 24).toFixed()\n        },\n        gas: BOATLOAD_OF_GAS,\n        walletCallbackUrl: window.location.href\n      });\n      loader.hide();\n    },\n\n    async fileOnChange(e) {\n      let loader = this.$loading.show();\n      /* upload image to IPFS */\n\n      const file = e.target.files[0];\n      const client = new NFTStorage({\n        token: process.env.VUE_APP_NFT_STORAGE_TOKEN\n      });\n      const metadataCid = await client.storeBlob(file);\n      const metadataUrl = \"https://ipfs.io/ipfs/\" + metadataCid;\n      this.image = metadataUrl;\n      loader.hide();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2BA,OAAOA,GAAP,MAAgB,QAAhB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,MAAMC,eAAc,GAAIF,GAAG,CAAC,CAAD,CAAH,CAAOG,KAAP,CAAa,MAAM,EAAnB,EAAuBC,OAAvB,EAAxB;AAEA,eAAe;EACbC,IAAI,EAAE,oBADO;;EAEbC,IAAI,GAAE;IACJ,OAAO;MACLC,KAAK,EAAC,EADD;MAELC,WAAW,EAAC,EAFP;MAGLC,KAAK,EAAC,EAHD;MAILC,cAAc,EAAC;IAJV,CAAP;EAMD,CATY;;EAUbC,OAAO,EAAC;IACN,MAAMC,SAAN,GAAiB;MACf,IAAIC,MAAK,GAAI,KAAKC,QAAL,CAAcC,IAAd,EAAb;MACA,MAAMC,MAAM,CAACC,gBAAP,CAAwBC,OAAxB,GAAkCC,YAAlC,CAA+C;QACnDC,UAAU,EAAEJ,MAAM,CAACK,UAAP,CAAkBC,YADqB;QAEnDC,UAAU,EAAE,aAFuC;QAGnDC,IAAI,EAAE;UACJjB,KAAK,EAAC,KAAKA,KADP;UAEJC,WAAW,EAAC,KAAKA,WAFb;UAGJC,KAAK,EAAC,KAAKA,KAHP;UAIJC,cAAc,EAACV,GAAG,CAAC,KAAKU,cAAN,CAAH,CAAyBP,KAAzB,CAA+B,MAAM,EAArC,EAAyCC,OAAzC;QAJX,CAH6C;QASnDqB,GAAG,EAACvB,eAT+C;QAUnDwB,iBAAiB,EAAEV,MAAM,CAACW,QAAP,CAAgBC;MAVgB,CAA/C,CAAN;MAYAf,MAAM,CAACgB,IAAP;IACD,CAhBK;;IAiBN,MAAMC,YAAN,CAAmBC,CAAnB,EAAqB;MACnB,IAAIlB,MAAK,GAAI,KAAKC,QAAL,CAAcC,IAAd,EAAb;MACA;;MACA,MAAMiB,IAAG,GAAID,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;MACA,MAAMC,MAAK,GAAI,IAAIlC,UAAJ,CAAe;QAAEmC,KAAK,EAAEC,OAAO,CAACC,GAAR,CAAYC;MAArB,CAAf,CAAf;MACA,MAAMC,WAAU,GAAI,MAAML,MAAM,CAACM,SAAP,CAAiBT,IAAjB,CAA1B;MACA,MAAMU,WAAU,GAAI,0BAA0BF,WAA9C;MACA,KAAK/B,KAAL,GAAaiC,WAAb;MACA7B,MAAM,CAACgB,IAAP;IACD;;EA1BK;AAVK,CAAf","names":["Big","NFTStorage","BOATLOAD_OF_GAS","times","toFixed","name","data","title","description","image","price_per_hour","methods","createCar","loader","$loading","show","window","walletConnection","account","functionCall","contractId","nearConfig","contractName","methodName","args","gas","walletCallbackUrl","location","href","hide","fileOnChange","e","file","target","files","client","token","process","env","VUE_APP_NFT_STORAGE_TOKEN","metadataCid","storeBlob","metadataUrl"],"sourceRoot":"","sources":["/var/www/ch-8-car-renting/frontend/src/components/Pages/CreateCarComponent.vue"],"sourcesContent":["<template>\n  <div class=\"container p-4\">\n    <form @submit.prevent=\"createCar\">\n      <div class=\"mb-3\">\n        <label for=\"title\" class=\"form-label\">Title</label>\n        <input type=\"text\" class=\"form-control\" id=\"title\" v-model=\"title\">\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"description\" class=\"form-label\">Description</label>\n        <input type=\"text\" class=\"form-control\" id=\"description\" v-model=\"description\">\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"image\" class=\"form-label\">Car Image</label>\n        <input type=\"file\" class=\"form-control\" id=\"image\" @change=\"fileOnChange\" required>\n        <img class=\"my-4\" width=\"350\" :src=\"image\"/>\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"price_per_hour\" class=\"form-label\">Price per hour</label>\n        <input type=\"text\" class=\"form-control\" id=\"price_per_hour\" placeholder=\"â“ƒ\" v-model=\"price_per_hour\">\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-primary\">Submit</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport Big from \"big.js\";\nimport { NFTStorage } from 'nft.storage'\n\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 13).toFixed();\n\nexport default {\n  name: \"CreateCarComponent\",\n  data(){\n    return {\n      title:\"\",\n      description:\"\",\n      image:\"\",\n      price_per_hour:\"\",\n    }\n  },\n  methods:{\n    async createCar(){\n      let loader = this.$loading.show();\n      await window.walletConnection.account().functionCall({\n        contractId: window.nearConfig.contractName,\n        methodName: 'add_new_car',\n        args: {\n          title:this.title,\n          description:this.description,\n          image:this.image,\n          price_per_hour:Big(this.price_per_hour).times(10 ** 24).toFixed(),\n        },\n        gas:BOATLOAD_OF_GAS,\n        walletCallbackUrl: window.location.href\n      });\n      loader.hide();\n    },\n    async fileOnChange(e){\n      let loader = this.$loading.show();\n      /* upload image to IPFS */\n      const file = e.target.files[0];\n      const client = new NFTStorage({ token: process.env.VUE_APP_NFT_STORAGE_TOKEN });\n      const metadataCid = await client.storeBlob(file)\n      const metadataUrl = \"https://ipfs.io/ipfs/\" + metadataCid;\n      this.image = metadataUrl;\n      loader.hide();\n    },\n\n  },\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}