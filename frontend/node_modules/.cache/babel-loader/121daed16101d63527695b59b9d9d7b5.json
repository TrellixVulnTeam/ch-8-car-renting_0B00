{"ast":null,"code":"import form from 'vuejs-form';\nimport Big from \"big.js\";\nimport { NFTStorage } from 'nft.storage';\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 13).toFixed();\nexport default {\n  name: \"CreateMeeting\",\n\n  data() {\n    return {\n      form: form({\n        owner_name: '',\n        title: '',\n        description: '',\n        ticket_price: '',\n        total_tickets: '',\n        place: '',\n        donation_type: '',\n        nft_media: ''\n      }).rules({\n        owner_name: 'min:3|required|max:1000|string',\n        title: 'min:3|required|max:1000|string',\n        description: 'required|min:5|max:2000|string',\n        ticket_price: 'required|numeric',\n        total_tickets: 'required|integer',\n        place: 'min:3|required|max:1000|string',\n        donation_type: 'required|string',\n        nft_media: 'required|string'\n      })\n    };\n  },\n\n  methods: {\n    async fileOnChange(e) {\n      let loader = this.$loading.show();\n      /* upload image to IPFS */\n\n      const file = e.target.files[0];\n      const client = new NFTStorage({\n        token: process.env.VUE_APP_NFT_STORAGE_TOKEN\n      });\n      const metadataCid = await client.storeBlob(file);\n      const metadataUrl = \"https://ipfs.io/ipfs/\" + metadataCid;\n      this.form.nft_media = metadataUrl;\n      loader.hide();\n    },\n\n    cleanUpForm() {\n      this.form.owner_name = '';\n      this.form.title = '';\n      this.form.description = '';\n      this.form.ticket_price = '';\n      this.form.total_tickets = '';\n      this.form.place = '';\n      this.form.donation_type = '';\n      this.form.nft_media = '';\n    },\n\n    submit() {\n      this.form.validate();\n      return this.form.errors().any() ? this.failed() : this.passed();\n    },\n\n    failed() {\n      console.log('errors: ', this.form.errors().all());\n    },\n\n    async createMeeting(owner_name, title, description, ticket_price, total_tickets, place, donation_type, nft_media) {\n      await window.walletSelector.signAndSendTransaction({\n        signerId: window.nearAccount.accountId,\n        // receiverId: nearConfig.contractName,\n        actions: [{\n          type: \"FunctionCall\",\n          params: {\n            methodName: \"add_new_meeting\",\n            args: {\n              \"owner_name\": owner_name,\n              \"title\": title,\n              \"description\": description,\n              \"ticket_price\": Big(ticket_price).times(10 ** 24).toFixed(),\n              \"total_tickets\": +total_tickets,\n              \"place\": place,\n              \"donation_type\": donation_type,\n              \"nft_media\": nft_media\n            },\n            gas: BOATLOAD_OF_GAS,\n            deposit: 0\n          }\n        }]\n      }).catch(err => {\n        console.log(\"Failed\");\n        throw err;\n      });\n    },\n\n    async passed() {\n      let loader = this.$loading.show();\n\n      try {\n        await this.createMeeting(this.form.owner_name, this.form.title, this.form.description, this.form.ticket_price, this.form.total_tickets, this.form.place, this.form.donation_type, this.form.nft_media);\n        this.$swal.fire({\n          icon: 'success',\n          title: 'Success',\n          text: 'Your Meeting has been created!',\n          footer: ``\n        });\n        this.cleanUpForm();\n      } catch (error) {\n        console.log(error.message);\n        this.$swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: error.message\n        });\n      }\n\n      loader.hide();\n    }\n\n  },\n  computed: {\n    donationTypes() {\n      return this.$DONATION_TYPES;\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["form","Big","NFTStorage","BOATLOAD_OF_GAS","times","toFixed","name","data","owner_name","title","description","ticket_price","total_tickets","place","donation_type","nft_media","rules","methods","fileOnChange","e","loader","$loading","show","file","target","files","client","token","process","env","VUE_APP_NFT_STORAGE_TOKEN","metadataCid","storeBlob","metadataUrl","hide","cleanUpForm","submit","validate","errors","any","failed","passed","console","log","all","createMeeting","window","walletSelector","signAndSendTransaction","signerId","nearAccount","accountId","actions","type","params","methodName","args","gas","deposit","catch","err","$swal","fire","icon","text","footer","error","message","computed","donationTypes","$DONATION_TYPES"],"sourceRoot":"","sources":["/var/www/ch-8-car-renting/frontend/src/components/Pages/Profile/CreateMeeting.vue"],"sourcesContent":["<template>\n  <form>\n    <div class=\"mb-3\">\n      <label for=\"nft_media\" class=\"form-label\">NFT Media</label>\n      <input type=\"file\" class=\"form-control\" id=\"nft_media\" @change=\"fileOnChange\" required>\n      <div class=\"form-text text-danger\" v-if=\"form.errors().has('nft_media')\" v-text=\"form.errors().get('nft_media')\"></div>\n      <img class=\"my-4\" width=\"350\" :src=\"form.nft_media\"/>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"owner_name\" class=\"form-label\">Your name</label>\n      <input type=\"text\" class=\"form-control\" id=\"owner_name\" v-model='form.owner_name'>\n      <div class=\"form-text text-danger\" v-if=\"form.errors().has('owner_name')\" v-text=\"form.errors().get('owner_name')\"></div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"title\" class=\"form-label\">Title</label>\n      <input type=\"text\" class=\"form-control\" id=\"title\" v-model='form.title'>\n      <div class=\"form-text text-danger\" v-if=\"form.errors().has('title')\" v-text=\"form.errors().get('title')\"></div>\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"description\" class=\"form-label\">Description</label>\n      <input type=\"text\" class=\"form-control\" id=\"description\" v-model='form.description'>\n      <div class=\"form-text text-danger\" v-if=\"form.errors().has('description')\" v-text=\"form.errors().get('description')\"></div>\n\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"ticket_price\" class=\"form-label\">Ticket price</label>\n      <input type=\"text\" class=\"form-control\" id=\"ticket_price\" placeholder=\"â“ƒ\" v-model='form.ticket_price'>\n      <div class=\"form-text text-danger\" v-if=\"form.errors().has('ticket_price')\" v-text=\"form.errors().get('ticket_price')\"></div>\n\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"total_tickets\" class=\"form-label\">Total tickets</label>\n      <input type=\"text\" class=\"form-control\" id=\"total_tickets\" v-model='form.total_tickets'>\n      <div class=\"form-text text-danger\" v-if=\"form.errors().has('total_tickets')\" v-text=\"form.errors().get('total_tickets')\"></div>\n\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"place\" class=\"form-label\">Where your meeting will take place</label>\n      <input type=\"text\" class=\"form-control\" id=\"place\" v-model='form.place'>\n      <div class=\"form-text text-danger\" v-if=\"form.errors().has('place')\" v-text=\"form.errors().get('place')\"></div>\n\n    </div>\n    <div class=\"mb-3\">\n      <label for=\"donation_type\" class=\"form-label\">Choose to which good cause collected money will be transferred</label>\n      <select id=\"donation_type\" class=\"form-select\" v-model='form.donation_type'>\n        <option disabled value=\"\">Select donation type</option>\n        <option v-for=\"(item, key) in donationTypes\" :key=\"key\"  :value=\"item.title\">\n          {{ item.title }} </option>\n      </select>\n      <div class=\"form-text text-danger\" v-if=\"form.errors().has('donation_type')\" v-text=\"form.errors().get('donation_type')\"></div>\n    </div>\n\n    <button type=\"submit\" class=\"btn btn-primary\" :disabled='form.empty()' @click.prevent='submit'>Submit</button>\n  </form>\n</template>\n\n<script>\nimport form from 'vuejs-form'\nimport Big from \"big.js\";\nimport { NFTStorage } from 'nft.storage'\n\nconst BOATLOAD_OF_GAS = Big(3).times(10 ** 13).toFixed();\n\nexport default {\n  name: \"CreateMeeting\",\n  data(){\n    return {\n      form: form({\n        owner_name: '',\n        title: '',\n        description: '',\n        ticket_price: '',\n        total_tickets: '',\n        place: '',\n        donation_type: '',\n        nft_media: '',\n      }).rules({\n            owner_name: 'min:3|required|max:1000|string',\n            title: 'min:3|required|max:1000|string',\n            description: 'required|min:5|max:2000|string',\n            ticket_price: 'required|numeric',\n            total_tickets: 'required|integer',\n            place: 'min:3|required|max:1000|string',\n            donation_type: 'required|string',\n            nft_media: 'required|string',\n          })\n    }\n  },\n  methods:{\n    async fileOnChange(e){\n      let loader = this.$loading.show();\n      /* upload image to IPFS */\n      const file = e.target.files[0];\n      const client = new NFTStorage({ token: process.env.VUE_APP_NFT_STORAGE_TOKEN });\n      const metadataCid = await client.storeBlob(file)\n      const metadataUrl = \"https://ipfs.io/ipfs/\" + metadataCid;\n      this.form.nft_media = metadataUrl;\n      loader.hide();\n    },\n\n    cleanUpForm(){\n      this.form.owner_name = '';\n      this.form.title = '';\n      this.form.description = '';\n      this.form.ticket_price = '';\n      this.form.total_tickets = '';\n      this.form.place = '';\n      this.form.donation_type = '';\n      this.form.nft_media = '';\n    },\n    submit() {\n      this.form.validate()\n      return this.form.errors().any() ? this.failed() : this.passed();\n    },\n    failed() {\n      console.log('errors: ', this.form.errors().all());\n    },\n\n    async createMeeting(\n        owner_name,\n        title,\n        description,\n        ticket_price,\n        total_tickets,\n        place,\n        donation_type,\n        nft_media,\n    ) {\n      await window.walletSelector.signAndSendTransaction({\n        signerId: window.nearAccount.accountId,\n        // receiverId: nearConfig.contractName,\n        actions:[\n          {\n            type: \"FunctionCall\",\n            params: {\n              methodName: \"add_new_meeting\",\n              args: {\n                \"owner_name\": owner_name,\n                \"title\": title,\n                \"description\": description,\n                \"ticket_price\": Big(ticket_price).times(10 ** 24).toFixed(),\n                \"total_tickets\": +total_tickets,\n                \"place\": place,\n                \"donation_type\": donation_type,\n                \"nft_media\": nft_media,\n              },\n              gas: BOATLOAD_OF_GAS,\n              deposit: 0\n            },\n          },\n        ]\n      }).catch((err) => {\n        console.log(\"Failed\");\n        throw err;\n      });\n    },\n    async passed() {\n      let loader = this.$loading.show();\n      try {\n        await this.createMeeting(\n            this.form.owner_name,\n            this.form.title,\n            this.form.description,\n            this.form.ticket_price,\n            this.form.total_tickets,\n            this.form.place,\n            this.form.donation_type,\n            this.form.nft_media,\n        );\n        this.$swal.fire({\n          icon: 'success',\n          title: 'Success',\n          text: 'Your Meeting has been created!',\n          footer: ``,\n        })\n        this.cleanUpForm();\n      }catch (error){\n        console.log(error.message);\n        this.$swal.fire({\n          icon: 'error',\n          title: 'Error',\n          text: error.message,\n        })\n\n      }\n      loader.hide();\n    }\n  },\n  computed: {\n    donationTypes(){\n      return this.$DONATION_TYPES\n    }\n  },\n}\n</script>\n\n<style scoped>\n\n</style>"]},"metadata":{},"sourceType":"module"}